(* Properties with t-bound rt-transition for terms **************************)

axiom cpt_total (h) (n) (G) (L) (T):
      ‚àÉU. ‚¶ÉG,L‚¶Ñ ‚ä¢ T ‚¨Ü[h,n] U.

lemma pippo (h) (G) (L) (T0):
      ‚àÄT1. ‚¶ÉG,L‚¶Ñ ‚ä¢ T1 ‚û°[h] T0 ‚Üí ‚àÄn,T2. ‚¶ÉG,L‚¶Ñ ‚ä¢ T0 ‚¨Ü[h,n] T2 ‚Üí
      ‚àÉ‚àÉT. ‚¶ÉG,L‚¶Ñ ‚ä¢ T1 ‚¨Ü[h,n] T & ‚¶ÉG,L‚¶Ñ ‚ä¢ T ‚û°[h] T2.
#h #G #L #T0 #T1 #H
@(cpr_ind ‚Ä¶ H) -G -L -T0 -T1
[ #I #G #L #n #T2 #HT2
  /2 width=3 by ex2_intro/
| #G #K #V1 #V0 #W0 #_ #IH #HVW0 #n #T2 #HT2
  elim (cpt_inv_lifts_sn ‚Ä¶ HT2 (‚ìâ) ‚Ä¶ K ‚Ä¶ HVW0) -W0
  [| /3 width=1 by drops_refl, drops_drop/ ] #V2 #HVT2 #HV02
  elim (IH ‚Ä¶ HV02) -V0 #V0 #HV10 #HV02   
|
|
|
|
|
| #p #G #L #V1 #V0 #W1 #W0 #T1 #T0 #_ #_ #_ #IHV #IHW #IHT #n #X #HX
  elim (cpt_inv_bind_sn ‚Ä¶ HX) -HX #X0 #T2 #HX #HT02 #H destruct
  elim (cpt_inv_cast_sn ‚Ä¶ HX) -HX *
  [ #W2 #V2 #HW02 #HV02 #H destruct
    elim (cpt_total h n G (L.‚ìõW1) T0) #T3 #HT03
    elim (IHV ‚Ä¶ HV02) -V0 #V0 #HV10 #HV02
    elim (IHW ‚Ä¶ HW02) -W0 #W0 #HW10 #HW02
    elim (IHT ‚Ä¶ HT02) -T0 #T0 #HT10 #HT02
    @(ex2_intro ‚Ä¶ (‚ìêV0.‚ìõ{p}W0.T0))
    [ /3 width=1 by cpt_appl, cpt_bind/
    | @(cpm_beta ‚Ä¶ HV02 HW02) 
    
  | #m #_ #H destruct
  ] 

lemma cpm_cpt_cpr (h) (n) (G) (L):
      ‚àÄT1,T2. ‚¶ÉG,L‚¶Ñ ‚ä¢ T1 ‚û°[n,h] T2 ‚Üí
      ‚àÉ‚àÉT0. ‚¶ÉG,L‚¶Ñ ‚ä¢ T1 ‚¨Ü[h,n] T0 & ‚¶ÉG,L‚¶Ñ ‚ä¢ T0 ‚û°[h] T2.
#h #n #G #L #T1 #T2 #H
@(cpm_ind ‚Ä¶ H) -n -G -L -T1 -T2
[ #I #G #L /2 width=3 by ex2_intro/
| #G #L #s /3 width=3 by cpm_sort, ex2_intro/
| #n #G #K #V1 #V2 #W2 #_ * #V0 #HV10 #HV02 #HVW2
  elim (lifts_total V0 (ùêî‚ù¥1‚ùµ)) #W0 #HVW0
  lapply (cpm_lifts_bi ‚Ä¶ HV02 (‚ìâ) ‚Ä¶ (K.‚ììV1) ‚Ä¶ HVW0 ‚Ä¶ HVW2) -HVW2
  [ /3 width=1 by drops_refl, drops_drop/ ] -HV02 #HW02
  /3 width=3 by cpt_delta, ex2_intro/
| #n #G #K #V1 #V2 #W2 #_ * #V0 #HV10 #HV02 #HVW2
  elim (lifts_total V0 (ùêî‚ù¥1‚ùµ)) #W0 #HVW0
  lapply (cpm_lifts_bi ‚Ä¶ HV02 (‚ìâ) ‚Ä¶ (K.‚ìõV1) ‚Ä¶ HVW0 ‚Ä¶ HVW2) -HVW2
  [ /3 width=1 by drops_refl, drops_drop/ ] -HV02 #HW02
  /3 width=3 by cpt_ell, ex2_intro/
| #n #I #G #K #T2 #U2 #i #_ * #T0 #HT0 #HT02 #HTU2
  elim (lifts_total T0 (ùêî‚ù¥1‚ùµ)) #U0 #HTU0
  lapply (cpm_lifts_bi ‚Ä¶ HT02 (‚ìâ) ‚Ä¶ (K.‚ìò{I}) ‚Ä¶ HTU0 ‚Ä¶ HTU2) -HTU2
  [ /3 width=1 by drops_refl, drops_drop/ ] -HT02 #HU02
  /3 width=3 by cpt_lref, ex2_intro/
| #n #p #I #G #L #V1 #V2 #T1 #T2 #HV12 #_ #_ * #T0 #HT10 #HT02
  /3 width=5 by cpt_bind, cpm_bind, ex2_intro/
| #n #G #L #V1 #V2 #T1 #T2 #HV12 #_ #_ * #T0 #HT10 #HT02
  /3 width=5 by cpt_appl, cpm_appl, ex2_intro/
| #n #G #L #V1 #V2 #T1 #T2 #_ #_ * #V0 #HV10 #HV02 * #T0 #HT10 #HT02
  /3 width=5 by cpt_cast, cpm_cast, ex2_intro/
| #n #G #L #V #U1 #T1 #T2 #HTU1 #_ * #T0 #HT10 #HT02
  elim (cpt_lifts_sn ‚Ä¶ HT10 (‚ìâ) ‚Ä¶ (L.‚ììV) ‚Ä¶ HTU1) -T1
  [| /3 width=1 by drops_refl, drops_drop/ ] #U0 #HTU0 #HU10
  /3 width=6 by cpt_bind, cpm_zeta, ex2_intro/
| #n #G #L #U #T1 #T2 #_ * #T0 #HT10 #HT02
| #n #G #L #U1 #U2 #T #_ * #U0 #HU10 #HU02
  /3 width=3 by cpt_ee, ex2_intro/
| #n #p #G #L #V1 #V2 #W1 #W2 #T1 #T2 #HV12 #HW12 #_ #_ #_ * #T0 #HT10 #HT02
  /4 width=7 by cpt_appl, cpt_bind, cpm_beta, ex2_intro/
| #n #p #G #L #V1 #V2 #V0 #W1 #W2 #T1 #T2 #HV12 #HW12 #_ #_ #_ * #T0 #HT10 #HT02 #HV20
  /4 width=9 by cpt_appl, cpt_bind, cpm_theta, ex2_intro/
]

(* Forward lemmas with t-bound rt-transition for terms **********************)

lemma pippo (h) (G) (L) (T0):
      ‚àÄT1. ‚¶ÉG,L‚¶Ñ ‚ä¢ T1 ‚û°[h] T0 ‚Üí
      ‚àÄn,T2. ‚¶ÉG,L‚¶Ñ ‚ä¢ T0 ‚¨Ü[h,n] T2 ‚Üí ‚¶ÉG,L‚¶Ñ ‚ä¢ T1 ‚û°[n,h] T2.
#h #G #L #T0 #T1 #H
@(cpr_ind ‚Ä¶ H) -G -L -T0 -T1
[ #I #G #L #n #T2 #HT2
  /2 width=1 by cpt_fwd_cpm/
| #G #K #V1 #V0 #W0 #_ #IH #HVW0 #n #T2 #HT2
  elim (cpt_inv_lifts_sn ‚Ä¶ HT2 (‚ìâ) ‚Ä¶ K ‚Ä¶ HVW0) -W0
  [| /3 width=1 by drops_refl, drops_drop/ ] #V2 #HVT2 #HV02
  lapply (IH ‚Ä¶ HV02) -V0 #HV12
  /2 width=3 by cpm_delta/
|
|
|
|
|
| #p #G #L #V1 #V0 #W1 #W0 #T1 #T0 #_ #_ #_ #IHV #IHW #IHT #n #X #HX
  elim (cpt_inv_bind_sn ‚Ä¶ HX) -HX #X0 #T2 #HX #HT02 #H destruct
  elim (cpt_inv_cast_sn ‚Ä¶ HX) -HX *
  [ #W2 #V2 #HW02 #HV02 #H destruct
    elim (cpt_total h n G (L.‚ìõW1) T0) #T2 #HT02
    lapply (IHV ‚Ä¶ HV02) -V0 #HV12
    lapply (IHW ‚Ä¶ HW02) -W0 #HW12
    lapply (IHT ‚Ä¶ HT02) -T0 #HT12
    @(cpm_beta ‚Ä¶ HV12 HW12) // 
    
  | #m #_ #H destruct
  ] 
