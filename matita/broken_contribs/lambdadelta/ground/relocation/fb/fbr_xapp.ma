(**************************************************************************)
(*       ___                                                              *)
(*      ||M||                                                             *)
(*      ||A||       A project by Andrea Asperti                           *)
(*      ||T||                                                             *)
(*      ||I||       Developers:                                           *)
(*      ||T||         The HELM team.                                      *)
(*      ||A||         http://helm.cs.unibo.it                             *)
(*      \   /                                                             *)
(*       \ /        This file is distributed under the terms of the       *)
(*        v         GNU General Public License Version 2                  *)
(*                                                                        *)
(**************************************************************************)

include "ground/relocation/fb/fbr_dapp.ma".
include "ground/arith/nat_psucc.ma".
include "ground/arith/nat_split.ma".
include "ground/notation/functions/at_2.ma".

(* EXTENDED DEPTH APPLICATION FOR FINITE RELOCATION MAPS WITH BOOLEANS ******)

definition fbr_xapp (f) (n): ‚Ñï ‚âù
           nsplit ‚Ä¶ (ùüé) (Œªp.(‚Å§(fÔº†‚ß£‚ù®p‚ù©))) n.

interpretation
  "extended depth application (finite relocation maps for unwind)"
  'At f n = (fbr_xapp f n).

(* Basic constructions ******************************************************)

lemma fbr_xapp_zero (f):
      (ùüé) = fÔº†‚ù®ùüé‚ù©.
// qed.

lemma fbr_xapp_pos (f) (p):
      (‚Å§(fÔº†‚ß£‚ù®p‚ù©)) = fÔº†‚ù®‚Å§p‚ù©.
// qed.

(* Advanced constructions ***************************************************)

lemma fbr_xapp_push_unit (f):
      (‚Å§ùüè) = (‚´Øf)Ôº†‚ù®‚Å§ùüè‚ù©.
// qed.

lemma fbr_xapp_push_succ (f) (p):
      (‚Å§‚Üë(fÔº†‚ù®‚Å§p‚ù©)) = (‚´Øf)Ôº†‚ù®‚Å§‚Üëp‚ù©.
// qed.

lemma fbr_next_pos (f) (p):
      (‚Å§‚Üë(fÔº†‚ù®‚Å§p‚ù©)) = (‚Üëf)Ôº†‚ù®‚Å§p‚ù©.
// qed.
