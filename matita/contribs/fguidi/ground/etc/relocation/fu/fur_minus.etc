(**************************************************************************)
(*       ___                                                              *)
(*      ||M||                                                             *)
(*      ||A||       A project by Andrea Asperti                           *)
(*      ||T||                                                             *)
(*      ||I||       Developers:                                           *)
(*      ||T||         The HELM team.                                      *)
(*      ||A||         http://helm.cs.unibo.it                             *)
(*      \   /                                                             *)
(*       \ /        This file is distributed under the terms of the       *)
(*        v         GNU General Public License Version 2                  *)
(*                                                                        *)
(**************************************************************************)

include "ground/relocation/fu/fur_map.ma".
include "ground/relocation/fb/fbr_map.ma".
include "ground/arith/nat_ppred_psucc.ma".

(* RIGHT SUBTRACTION FOR FINITE RELOCATION MAPS FOR UNWIND ******************)

rec definition fur_minus (r) (f) on f: 𝔽𝕌 ≝
match f with
[ list_empty     ⇒ f
| list_lcons i g ⇒
  match i with
  [ ur_p   ⇒ ⫯(fur_minus r g)
  | ur_j k ⇒ 
    match r with
    [ list_empty     ⇒ f
    | list_lcons j s ⇒
      match j with
      [ false  ⇒ (fur_minus s g)◖i
      | true  ⇒ ⮤*[𝟎](fur_minus s g)
      ]
    ]
  ]
].

interpretation
  "right minus (finite relocation maps for unwind)"
  'minus f r = (fur_minus r f).

(* Basic constructions ******************************************************)

lemma fur_minus_id_sn (r):
      (𝐢) = 𝐢-r.
// qed.

lemma fur_minus_push_sn (f) (r):
      (⫯(f-r)) = (⫯f)-r.
// qed.

lemma fur_minus_join_id (f) (k):
      (⮤*[k]f) = (⮤*[k]f)-𝐢.
// qed.

lemma fur_minus_join_push (f) (k) (r):
      (⮤*[k](f-r)) = (⮤*[k]f)-(⫯r).
// qed.

lemma fur_minus_join_next (f) (k) (r):
      (⮤*[𝟎](f-r)) = (⮤*[k]f)-(↑r).
// qed.

(* Advanced constructions ***************************************************)

lemma fur_minus_id_dx (f):
      f = f-𝐢.
#f elim f -f //
* //
qed.
