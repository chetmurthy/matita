(**************************************************************************)
(*       ___                                                              *)
(*      ||M||                                                             *)
(*      ||A||       A project by Andrea Asperti                           *)
(*      ||T||                                                             *)
(*      ||I||       Developers:                                           *)
(*      ||T||         The HELM team.                                      *)
(*      ||A||         http://helm.cs.unibo.it                             *)
(*      \   /                                                             *)
(*       \ /        This file is distributed under the terms of the       *)
(*        v         GNU General Public License Version 2                  *)
(*                                                                        *)
(**************************************************************************)

(* NOTATION FOR THE FORMAL SYSTEM ŒªŒ¥ ****************************************)

(* Grammar ******************************************************************)

notation "hvbox( ‚ì™ )"
 non associative with precedence 90
 for @{ 'Item0 }.

notation "hvbox( ‚ì™ { I } )"
 non associative with precedence 90
 for @{ 'Item0 $I }.

notation "hvbox( ‚ãÜ )"
 non associative with precedence 90
 for @{ 'Star }.

notation "hvbox( ‚ãÜ term 90 k )"
 non associative with precedence 90
 for @{ 'Star $k }.

notation "hvbox( # term 90 i )"
 non associative with precedence 90
 for @{ 'LRef $i }.

notation "hvbox( ¬ß term 90 p )"
 non associative with precedence 90
 for @{ 'GRef $p }.

notation "hvbox( ‚ë° term 55 T1 . break term 55 T )"
 non associative with precedence 55
 for @{ 'SnItem2 $T1 $T }.

notation "hvbox( ‚ë° { I } break term 55 T1 . break term 55 T )"
 non associative with precedence 55
 for @{ 'SnItem2 $I $T1 $T }.

notation "hvbox( ‚ìë { I } break term 55 T1 . break term 55 T )"
 non associative with precedence 55
 for @{ 'SnBind2 $I $T1 $T }.

notation "hvbox( ‚ìï { I } break term 55 T1 . break term 55 T )"
 non associative with precedence 55
 for @{ 'SnFlat2 $I $T1 $T }.

notation "hvbox( ‚ìì  term 55 T1 . break term 55 T2 )"
 non associative with precedence 55
 for @{ 'SnAbbr $T1 $T2 }.

notation "hvbox( ‚ìõ  term 55 T1 . break term 55 T2 )"
 non associative with precedence 55
 for @{ 'SnAbst $T1 $T2 }.

notation "hvbox( ‚ìê  term 55 T1 . break term 55 T2 )"
 non associative with precedence 55
 for @{ 'SnAppl $T1 $T2 }.

notation "hvbox( ‚ì£  term 55 T1 . break term 55 T2 )"
 non associative with precedence 55
 for @{ 'SnCast $T1 $T2 }.

notation "hvbox( ‚í∂ term 55 T1 . break term 55 T )"
 non associative with precedence 55
 for @{ 'SnApplV $T1 $T }.

notation > "hvbox( T . break ‚ë°{ I } break term 47 T1 )"
 non associative with precedence 46
 for @{ 'DxBind2 $T $I $T1 }.

notation "hvbox( T . break ‚ìë { I } break term 48 T1 )"
 non associative with precedence 47
 for @{ 'DxBind2 $T $I $T1 }.

notation "hvbox( T1 . break ‚ìì T2 )"
 left associative with precedence 48
 for @{ 'DxAbbr $T1 $T2 }.

notation "hvbox( T1 . break ‚ìõ T2 )"
 left associative with precedence 49
 for @{ 'DxAbst $T1 $T2 }.

notation "hvbox( T . break ‚ë£ { I } break { T1 , break T2 , break T3 } )"
 non associative with precedence 50
 for @{ 'DxItem4 $T $I $T1 $T2 $T3 }.

notation "hvbox( # [ x ] )"
 non associative with precedence 90
 for @{ 'Weight $x }.

notation "hvbox( # [ x , break y ] )"
 non associative with precedence 90
 for @{ 'Weight $x $y }.

notation "hvbox( ùêí [ T ] )"
   non associative with precedence 45
   for @{ 'Simple $T }.

notation "hvbox( L ‚ä¢ break term 46 T1 ‚âà break term 46 T2 )"
   non associative with precedence 45
   for @{ 'Hom $L $T1 $T2 }.

notation "hvbox( T1 ‚âÉ break term 46 T2 )"
   non associative with precedence 45
   for @{ 'Iso $T1 $T2 }.

notation "hvbox( T1 break [ d , break e ] ‚âº break term 46 T2 )"
   non associative with precedence 45
   for @{ 'SubEq $T1 $d $e $T2 }.

(* Substitution *************************************************************)

notation "hvbox( L ‚ä¢ break [ d , break e ] break ùêë [ T ] )"
   non associative with precedence 45
   for @{ 'Reducible $L $d $e $T }.

notation "hvbox( L ‚ä¢ break [ d , break e ] break ùêà [ T ] )"
   non associative with precedence 45
   for @{ 'NotReducible $L $d $e $T }.

notation "hvbox( L ‚ä¢ break [ d , break e ] break ùêç [ T ] )"
   non associative with precedence 45
   for @{ 'Normal $L $d $e $T }.

notation "hvbox( ‚áß [ d , break e ] break term 46 T1 ‚â° break term 46 T2 )"
   non associative with precedence 45
   for @{ 'RLift $d $e $T1 $T2 }.

notation "hvbox( ‚á© [ e ] break term 46 L1 ‚â° break term 46 L2 )"
   non associative with precedence 45
   for @{ 'RDrop $e $L1 $L2 }.

notation "hvbox( ‚á© [ d , break e ] break term 46 L1 ‚â° break term 46 L2 )"
   non associative with precedence 45
   for @{ 'RDrop $d $e $L1 $L2 }.

notation "hvbox( L ‚ä¢ break ‚åò [ T ] ‚â° break term 46 k )"
   non associative with precedence 45
   for @{ 'ICM $L $T $k }.

notation "hvbox( L ‚ä¢ break term 46 T1 break [ d , break e ] ‚ñ∂ break term 46 T2 )"
   non associative with precedence 45
   for @{ 'PSubst $L $T1 $d $e $T2 }.

(* Unfold *******************************************************************)

notation "hvbox( @ [ T1 ] break term 46 f ‚â° break term 46 T2 )"
   non associative with precedence 45
   for @{ 'RAt $T1 $f $T2 }.

notation "hvbox( T1 ‚ñ≠ break term 46 T2 ‚â° break term 46 T )"
   non associative with precedence 45
   for @{ 'RMinus $T1 $T2 $T }.

notation "hvbox( ‚áß * [ e ] break term 46 T1 ‚â° break term 46 T2 )"
   non associative with precedence 45
   for @{ 'RLiftStar $e $T1 $T2 }.

notation "hvbox( ‚á© * [ e ] break term 46 L1 ‚â° break term 46 L2 )"
   non associative with precedence 45
   for @{ 'RDropStar $e $L1 $L2 }.

notation "hvbox( T1 break [ d , break e ] ‚ñ∂* break term 46 T2 )"
   non associative with precedence 45
   for @{ 'PSubstStar $T1 $d $e $T2 }.

notation "hvbox( L ‚ä¢ break term 46 T1 break [ d , break e ] ‚ñ∂* break term 46 T2 )"
   non associative with precedence 45
   for @{ 'PSubstStar $L $T1 $d $e $T2 }.

notation "hvbox( L ‚ä¢ break term 46 T1 break [ d , break e ] ‚ñ∂‚ñ∂* break term 46 T2 )"
   non associative with precedence 45
   for @{ 'PSubstStarAlt $L $T1 $d $e $T2 }.

notation "hvbox( T1 break [ d , break e ] ‚â° break term 46 T2 )"
   non associative with precedence 45
   for @{ 'TSubst $T1 $d $e $T2 }.

notation "hvbox( L ‚ä¢ break term 46 T1 break [ d , break e ] ‚â° break term 46 T2 )"
   non associative with precedence 45
   for @{ 'TSubst $L $T1 $d $e $T2 }.

notation "hvbox( T1 break [ d , break e ] ‚â°‚â° break term 46 T2 )"
   non associative with precedence 45
   for @{ 'TSubstAlt $T1 $d $e $T2 }.

notation "hvbox( L ‚ä¢ break term 46 T1 break [ d , break e ] ‚â°‚â° break term 46 T2 )"
   non associative with precedence 45
   for @{ 'TSubstAlt $L $T1 $d $e $T2 }.

(* Static typing ************************************************************)

notation "hvbox( L ‚ä¢ break term 46 T ‚Åù break term 46 A )"
   non associative with precedence 45
   for @{ 'AtomicArity $L $T $A }.

notation "hvbox( T1 ‚Åù ‚äë break term 46 T2 )"
   non associative with precedence 45
   for @{ 'CrSubEqA $T1 $T2 }.

notation "hvbox( L ‚ä¢ break term 46 T √∑ break term 46 A )"
   non associative with precedence 45
   for @{ 'BinaryArity $L $T $A }.

notation "hvbox( T1 √∑ ‚äë break term 46 T2 )"
   non associative with precedence 45
   for @{ 'CrSubEqB $T1 $T2 }.

notation "hvbox( ‚¶É h , break L ‚¶Ñ ‚ä¢ break term 46 T1 ‚Ä¢ break term 46 T2 )"
   non associative with precedence 45
   for @{ 'StaticType $h $L $T1 $T2 }.

(* Unwind *******************************************************************)

notation "hvbox( ‚¶É h , break L ‚¶Ñ ‚ä¢ break term 46 T1 ‚Ä¢* break term 46 T2 )"
   non associative with precedence 45
   for @{ 'StaticTypeStar $h $L $T1 $T2 }.

(* Reducibility *************************************************************)

notation "hvbox( ùêë [ T ] )"
   non associative with precedence 45
   for @{ 'Reducible $T }.

notation "hvbox( L ‚ä¢ break ùêë [ T ] )"
   non associative with precedence 45
   for @{ 'Reducible $L $T }.

notation "hvbox( ùêà [ T ] )"
   non associative with precedence 45
   for @{ 'NotReducible $T }.

notation "hvbox( L ‚ä¢ break ùêà [ T ] )"
   non associative with precedence 45
   for @{ 'NotReducible $L $T }.

notation "hvbox( ùêç [ T ] )"
   non associative with precedence 45
   for @{ 'Normal $T }.

notation "hvbox( L ‚ä¢ break ùêç [ T ] )"
   non associative with precedence 45
   for @{ 'Normal $L $T }.

notation "hvbox( ùêñùêáùêë [ T ] )"
   non associative with precedence 45
   for @{ 'WHdReducible $T }.

notation "hvbox( L ‚ä¢ break ùêñùêáùêë [ T ] )"
   non associative with precedence 45
   for @{ 'WHdReducible $L $T }.

notation "hvbox( ùêñùêáùêà [ T ] )"
   non associative with precedence 45
   for @{ 'NotWHdReducible $T }.

notation "hvbox( L ‚ä¢ break ùêñùêáùêà [ T ] )"
   non associative with precedence 45
   for @{ 'NotWHdReducible $L $T }.

notation "hvbox( ùêñùêáùêç [ T ] )"
   non associative with precedence 45
   for @{ 'WHdNormal $T }.

notation "hvbox( L ‚ä¢ break ùêñùêáùêç [ T ] )"
   non associative with precedence 45
   for @{ 'WHdNormal $L $T }.

notation "hvbox( T1 ‚û° break term 46 T2 )"
   non associative with precedence 45
   for @{ 'PRed $T1 $T2 }.

notation "hvbox( L ‚ä¢ break term 46 T1 ‚û° break term 46 T2 )"
   non associative with precedence 45
   for @{ 'PRed $L $T1 $T2 }.

notation "hvbox( L1 ‚ä¢ ‚û° break term 46 L2 )"
   non associative with precedence 45
   for @{ 'CPRed $L1 $L2 }.

(* Computation **************************************************************)

notation "hvbox( T1 ‚û°* break term 46 T2 )"
   non associative with precedence 45
   for @{ 'PRedStar $T1 $T2 }.

notation "hvbox( L ‚ä¢ break term 46 T1 ‚û°* break term 46 T2 )"
   non associative with precedence 45
   for @{ 'PRedStar $L $T1 $T2 }.

notation "hvbox( L1 ‚ä¢ ‚û°* break term 46 L2 )"
   non associative with precedence 45
   for @{ 'CPRedStar $L1 $L2 }.

notation "hvbox( L ‚ä¢ break term 46 T1 ‚û°* break ùêç [ T2 ] )"
   non associative with precedence 45
   for @{ 'PEval $L $T1 $T2 }.

notation "hvbox( ‚¨á * term 46 T  )"
   non associative with precedence 45
   for @{ 'SN $T }.

notation "hvbox( L ‚ä¢ ‚¨á * term 46 T )"
   non associative with precedence 45
   for @{ 'SN $L $T }.

notation "hvbox( L ‚ä¢ ‚¨á ‚¨á * term 46 T )"
   non associative with precedence 45
   for @{ 'SNAlt $L $T }.

notation "hvbox( ‚¶É L, break T ‚¶Ñ break [ R ] œµ break „Äö A „Äõ )"
   non associative with precedence 45
   for @{ 'InEInt $R $L $T $A }.

notation "hvbox( T1 break [ R ] ‚äë break term 46 T2 )"
   non associative with precedence 45
   for @{ 'CrSubEq $T1 $R $T2 }.

(* Conversion ***************************************************************)

notation "hvbox( L ‚ä¢ break term 46 T1 ‚¨å break term 46 T2 )"
   non associative with precedence 45
   for @{ 'PConv $L $T1 $T2 }.

notation "hvbox( T1 ‚ä¢ ‚¨å break term 46 T2 )"
   non associative with precedence 45
   for @{ 'CPConv $T1 $T2 }.

(* Equivalence **************************************************************)

notation "hvbox( L ‚ä¢ break term 46 T1 ‚¨å* break term 46 T2 )"
   non associative with precedence 45
   for @{ 'PConvStar $L $T1 $T2 }.

notation "hvbox( T1 ‚ä¢ ‚¨å* break term 46 T2 )"
   non associative with precedence 45
   for @{ 'CPConvStar $T1 $T2 }.

(* Dynamic typing ***********************************************************)

notation "hvbox( ‚¶É h , break L ‚¶Ñ ‚ä¢ break term 46 T1 : break term 46 T2 )"
   non associative with precedence 45
   for @{ 'NativeType $h $L $T1 $T2 }.

notation "hvbox( ‚¶É h , break L ‚¶Ñ ‚ä¢ break term 46 T1 :: break term 46 T2 )"
   non associative with precedence 45
   for @{ 'NativeTypeAlt $h $L $T1 $T2 }.

notation "hvbox( h ‚ä¢ break term 46 L1 : ‚äë break term 46 L2 )"
   non associative with precedence 45
   for @{ 'CrSubEqN $h $L1 $L2 }.
