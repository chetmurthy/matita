(**************************************************************************)
(*       ___                                                              *)
(*      ||M||                                                             *)
(*      ||A||       A project by Andrea Asperti                           *)
(*      ||T||                                                             *)
(*      ||I||       Developers:                                           *)
(*      ||T||         The HELM team.                                      *)
(*      ||A||         http://helm.cs.unibo.it                             *)
(*      \   /                                                             *)
(*       \ /        This file is distributed under the terms of the       *)
(*        v         GNU General Public License Version 2                  *)
(*                                                                        *)
(**************************************************************************)

include "Basic_2/static/aaa.ma".
include "Basic_2/computation/lsubc.ma".
(*
axiom lsubc_ldrops_trans: ‚àÄRP,L1,L2. L1 [RP] ‚äë L2 ‚Üí ‚àÄK2,des. ‚á©[des] L2 ‚â° K2 ‚Üí
                          ‚àÉ‚àÉK1. ‚á©[des] L1 ‚â° K1 & K1 [RP] ‚äë K2.
*)
axiom ldrops_lsubc_trans: ‚àÄRP,L1,K1,des. ‚á©*[des] L1 ‚â° K1 ‚Üí ‚àÄK2. K1 [RP] ‚äë K2 ‚Üí
                          ‚àÉ‚àÉL2. L1 [RP] ‚äë L2 & ‚á©*[des] L2 ‚â° K2.

axiom lifts_trans: ‚àÄT1,T,des1. ‚áß*[des1] T1 ‚â° T ‚Üí ‚àÄT2:term. ‚àÄdes2. ‚áß*[des2] T ‚â° T2 ‚Üí
                   ‚áß*[des1 @ des2] T1 ‚â° T2.

axiom ldrops_trans: ‚àÄL1,L,des1. ‚á©*[des1] L1 ‚â° L ‚Üí ‚àÄL2,des2. ‚á©*[des2] L ‚â° L2 ‚Üí
                    ‚á©*[des2 @ des1] L1 ‚â° L2.

(* ABSTRACT COMPUTATION PROPERTIES ******************************************)

(* Main propertis ***********************************************************)

axiom aacr_aaa_csubc_lifts: ‚àÄRR,RS,RP. 
                              acp RR RS RP ‚Üí acr RR RS RP (ŒªL,T. RP L T) ‚Üí
                              ‚àÄL1,T,A. L1 ‚ä¢ T √∑ A ‚Üí ‚àÄL0,des. ‚á©*[des] L0 ‚â° L1 ‚Üí
                              ‚àÄT0. ‚áß*[des] T ‚â° T0 ‚Üí ‚àÄL2. L2 [RP] ‚äë L0 ‚Üí
                              ‚¶ÉL2, T0‚¶Ñ [RP] œµ „ÄöA„Äõ.
(*
#RR #RS #RP #H1RP #H2RP #L1 #T #A #H elim H -L1 -T -A
[ (*#L #k #L2 #HL2
  lapply (aacr_acr ‚Ä¶ H1RP H2RP ùïí) #HAtom
  @(s2 ‚Ä¶ HAtom ‚Ä¶ ‚óä) // /2 width=2/ *)
| (* * #L #K #V #B #i #HLK #_ #IHB #L2 #HL2
  [
  | lapply (aacr_acr ‚Ä¶ H1RP H2RP B) #HB
    @(s2 ‚Ä¶ HB ‚Ä¶ ‚óä) //
(*    @(cp2 ‚Ä¶ H1RP) *)
  ] *)
| (* #L #V #T #B #A #_ #_ #IHB #IHA #L2 #HL2
  lapply (aacr_acr ‚Ä¶ H1RP H2RP A) #HA
  lapply (aacr_acr ‚Ä¶ H1RP H2RP B) #HB
  lapply (s1 ‚Ä¶ HB) -HB #HB
  @(s5 ‚Ä¶ HA ‚Ä¶ ‚óä ‚óä) // /3 width=1/ *)
| #L #W #T #B #A #_ #_ #IHB #IHA #L0 #des #HL0 #X #H #L2 #HL02
  elim (lifts_inv_bind1 ‚Ä¶ H) -H #W0 #T0 #HW0 #HT0 #H destruct
  @(aacr_abst  ‚Ä¶ H1RP H2RP)
  [ lapply (aacr_acr ‚Ä¶ H1RP H2RP B) #HB
    @(s1 ‚Ä¶ HB) /2 width=5/
  | #L3 #V3 #T3 #des3 #HL32 #HT03 #HB
    elim (lifts_total des3 W0) #W2 #HW02
    elim (ldrops_lsubc_trans ‚Ä¶ HL32 ‚Ä¶ HL02) -L2 #L2 #HL32 #HL20
    @(IHA (L2. ùïì{Abst} W2) ‚Ä¶ (ss des @ ss des3))
    /2 width=3/ /3 width=5/ /4 width=6/
  ]
| /3 width=1/
| #L #V #T #A #_ #_ #IH1A #IH2A #L2 #HL2
  lapply (aacr_acr ‚Ä¶ H1RP H2RP A) #HA
  lapply (s1 ‚Ä¶ HA) #H
  @(s6 ‚Ä¶ HA ‚Ä¶ ‚óä) /2 width=1/ /3 width=1/
]
*)
lemma acp_aaa: ‚àÄRR,RS,RP. acp RR RS RP ‚Üí acr RR RS RP (ŒªL,T. RP L T) ‚Üí
               ‚àÄL,T,A. L ‚ä¢ T √∑ A ‚Üí RP L T.
#RR #RS #RP #H1RP #H2RP #L #T #A #HT
lapply (aacr_acr ‚Ä¶ H1RP H2RP A) #HA
@(s1 ‚Ä¶ HA) /2 width=8/
qed.
