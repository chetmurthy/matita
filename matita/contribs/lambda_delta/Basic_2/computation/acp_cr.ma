(**************************************************************************)
(*       ___                                                              *)
(*      ||M||                                                             *)
(*      ||A||       A project by Andrea Asperti                           *)
(*      ||T||                                                             *)
(*      ||I||       Developers:                                           *)
(*      ||T||         The HELM team.                                      *)
(*      ||A||         http://helm.cs.unibo.it                             *)
(*      \   /                                                             *)
(*       \ /        This file is distributed under the terms of the       *)
(*        v         GNU General Public License Version 2                  *)
(*                                                                        *)
(**************************************************************************)

include "Basic_2/grammar/aarity.ma".
include "Basic_2/grammar/term_simple.ma".
include "Basic_2/substitution/lift_vector.ma".
include "Basic_2/computation/acp.ma".

(* ABSTRACT COMPUTATION PROPERTIES ******************************************)

(* Note: this is Girard's CR1 *)
definition S1 ‚âù ŒªRP,C:lenv‚Üípredicate term.
                ‚àÄL,T. C L T ‚Üí RP L T.

(* Note: this is Tait's iii, or Girard's CR4 *)
definition S2 ‚âù ŒªRR:lenv‚Üírelation term. ŒªRS:relation term. ŒªRP,C:lenv‚Üípredicate term.
                ‚àÄL,Vs. all ‚Ä¶ (RP L) Vs ‚Üí
                ‚àÄT. ùïä[T] ‚Üí NF ‚Ä¶ (RR L) RS T ‚Üí C L (‚í∂Vs.T).

(* Note: this is Tait's ii *)
definition S3 ‚âù ŒªRP,C:lenv‚Üípredicate term.
                ‚àÄL,Vs,V,T,W. C L (‚í∂Vs. ùïî{Abbr}V. T) ‚Üí RP L W ‚Üí C L (‚í∂Vs. ùïî{Appl}V. ùïî{Abst}W. T).

definition S5 ‚âù ŒªRP,C:lenv‚Üípredicate term.
                ‚àÄL,V1s,V2s. ‚áë[0, 1] V1s ‚â° V2s ‚Üí
                ‚àÄV,T. C (L. ùïì{Abbr}V) (‚í∂V2s. T) ‚Üí RP L V ‚Üí C L (‚í∂V1s. ùïî{Abbr}V. T).

definition S6 ‚âù ŒªRP,C:lenv‚Üípredicate term.
                ‚àÄL,Vs,T,W. C L (‚í∂Vs. T) ‚Üí RP L W ‚Üí C L (‚í∂Vs. ùïî{Cast}W. T).

definition S7 ‚âù ŒªC:lenv‚Üípredicate term. ‚àÄL1,L2,T1,T2,d,e.
                C L1 T1 ‚Üí ‚áì[d, e] L2 ‚â° L1 ‚Üí ‚áë[d, e] T1 ‚â° T2 ‚Üí C L2 T2.

(* properties of the abstract candidate of reducibility *)
record acr (RR:lenv->relation term) (RS:relation term) (RP,C:lenv‚Üípredicate term) : Prop ‚âù
{ s1: S1 RP C;
  s2: S2 RR RS RP C;
  s3: S3 RP C;
  s5: S5 RP C;
  s6: S6 RP C;
  s7: S7 C
}.

(* the abstract candidate of reducibility associated to an atomic arity *)
let rec aacr (RP:lenv‚Üípredicate term) (A:aarity) (L:lenv) on A: predicate term ‚âù
ŒªT. match A with
[ AAtom     ‚áí RP L T
| APair B A ‚áí ‚àÄV. aacr RP B L V ‚Üí aacr RP A L (ùïî{Appl} V. T)
].

interpretation
   "candidate of reducibility of an atomic arity (abstract)"
   'InEInt RP L T A = (aacr RP A L T).

(* Basic properties *********************************************************)

axiom aacr_acr: ‚àÄRR,RS,RP. acp RR RS RP ‚Üí acr RR RS RP (ŒªL,T. RP L T) ‚Üí
                ‚àÄA. acr RR RS RP (aacr RP A).
(*
#RR #RS #RP #H1RP #H2RP #A elim A -A normalize //
#B #A #IHB #IHA @mk_acr normalize
[ #L #T #H
  lapply (H (‚ãÜ0) ?) -H [ @(s2 ‚Ä¶ IHB ‚Ä¶ ‚óä) // /2 width=2/ ] #H
  @(cp3 ‚Ä¶ H1RP ‚Ä¶ 0) @(s1 ‚Ä¶ IHA) //
| #L #Vs #HVs #T #H1T #H2T #V #HB
  lapply (s1 ‚Ä¶ IHB ‚Ä¶ HB) #HV
  @(s2 ‚Ä¶ IHA ‚Ä¶ (V :: Vs)) // /2 width=1/
| #L #Vs #V #T #W #HA #HW #V0 #HB
  @(s3 ‚Ä¶ IHA ‚Ä¶ (V0 :: Vs)) // /2 width=1/
| #L #V1s #V2s #HV12s #V #T #HA #HV #V1 #HB
  elim (lift_total V1 0 1) #V2 #HV12
  @(s5 ‚Ä¶ IHA ‚Ä¶ (V1 :: V1s) (V2 :: V2s)) // /2 width=1/
  @HA @(s7 ‚Ä¶ IHB ‚Ä¶ HB ‚Ä¶ HV12) /2 width=1/
| #L #Vs #T #W #HA #HW #V0 #HB
  @(s6 ‚Ä¶ IHA ‚Ä¶ (V0 :: Vs)) // /2 width=1/
| #L1 #L2 #T1 #T2 #d #e #HA #HL21 #HT12 #V2 #HB
  @(s7 ‚Ä¶ IHA ‚Ä¶ HL21) [2: @HA [2: 
]
qed.
*)
lemma aacr_abst: ‚àÄRR,RS,RP. acp RR RS RP ‚Üí acr RR RS RP (ŒªL,T. RP L T) ‚Üí
                 ‚àÄL,W,T,A,B. RP L W ‚Üí
                 (‚àÄV. ‚¶ÉL, V‚¶Ñ [RP] œµ „ÄöB„Äõ ‚Üí ‚¶ÉL. ùïì{Abbr}V, T‚¶Ñ [RP] œµ „ÄöA„Äõ) ‚Üí
                              ‚¶ÉL, ùïì{Abst}W. T‚¶Ñ [RP] œµ „ÄöùïîB. A„Äõ.
#RR #RS #RP #H1RP #H2RP #L #W #T #A #B #HW #HA #V #HB
lapply (aacr_acr ‚Ä¶ H1RP H2RP A) #HCA
lapply (aacr_acr ‚Ä¶ H1RP H2RP B) #HCB
lapply (s1 ‚Ä¶ HCB) -HCB #HCB
@(s3 ‚Ä¶ HCA ‚Ä¶ ‚óä) // @(s5 ‚Ä¶ HCA ‚Ä¶ ‚óä ‚óä) // /2 width=1/
qed.
