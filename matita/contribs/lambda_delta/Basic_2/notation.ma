(**************************************************************************)
(*       ___                                                              *)
(*      ||M||                                                             *)
(*      ||A||       A project by Andrea Asperti                           *)
(*      ||T||                                                             *)
(*      ||I||       Developers:                                           *)
(*      ||T||         The HELM team.                                      *)
(*      ||A||         http://helm.cs.unibo.it                             *)
(*      \   /                                                             *)
(*       \ /        This file is distributed under the terms of the       *)
(*        v         GNU General Public License Version 2                  *)
(*                                                                        *)
(**************************************************************************)

(* NOTATION FOR THE FORMAL SYSTEM ŒªŒ¥ ****************************************)

(* Grammar ******************************************************************)

notation "hvbox( ‚ãÜ )"
 non associative with precedence 90
 for @{ 'Star }.

notation "hvbox( ‚ãÜ term 90 k )"
 non associative with precedence 90
 for @{ 'Star $k }.

notation "hvbox( # term 90 i )"
 non associative with precedence 90
 for @{ 'LRef $i }.

notation "hvbox( ¬ß term 90 p )"
 non associative with precedence 90
 for @{ 'GRef $p }.

notation "hvbox( ùïí )"
 non associative with precedence 90
 for @{ 'SItem }.

notation "hvbox( ùïí { I } )"
 non associative with precedence 90
 for @{ 'SItem $I }.

notation "hvbox( ùïî term 90 T1 . break term 90 T )"
 non associative with precedence 90
 for @{ 'SItem $T1 $T }.

notation "hvbox( ùïî { I } break term 90 T1 . break term 90 T )"
 non associative with precedence 90
 for @{ 'SItem $I $T1 $T }.

notation "hvbox( ùïì { I } break term 90 T1 . break term 90 T )"
 non associative with precedence 90
 for @{ 'SBind $I $T1 $T }.

notation "hvbox( ùïó { I } break term 90 T1 . break term 90 T )"
 non associative with precedence 90
 for @{ 'SFlat $I $T1 $T }.

notation "hvbox( T . break ùïì { I } break term 90 T1 )"
 non associative with precedence 89
 for @{ 'DBind $T $I $T1 }.
(*
notation > "hvbox( T . break ùïî { I } break term 90 T1 )"
 non associative with precedence 89
 for @{ 'DBind $T $I $T1 }.
*) (**) (* this breaks all parsing *)
notation "hvbox( # [ x ] )"
 non associative with precedence 90
 for @{ 'Weight $x }.

notation "hvbox( # [ x , break y ] )"
 non associative with precedence 90
 for @{ 'Weight $x $y }.

notation "hvbox( ùïä [ T ] )"
   non associative with precedence 45
   for @{ 'Simple $T }.

notation "hvbox( T1 break [ d , break e ] ‚âº break T2 )"
   non associative with precedence 45
   for @{ 'SubEq $T1 $d $e $T2 }.

(* Substitution *************************************************************)

notation "hvbox( ‚Üë [ d , break e ] break T1 ‚â° break T2 )"
   non associative with precedence 45
   for @{ 'RLift $d $e $T1 $T2 }.

notation "hvbox( ‚Üì [ e ] break L1 ‚â° break L2 )"
   non associative with precedence 45
   for @{ 'RDrop $e $L1 $L2 }.

notation "hvbox( ‚Üì [ d , break e ] break L1 ‚â° break L2 )"
   non associative with precedence 45
   for @{ 'RDrop $d $e $L1 $L2 }.

notation "hvbox( T1 break [ d , break e ] ‚â´ break T2 )"
   non associative with precedence 45
   for @{ 'PSubst $T1 $d $e $T2 }.

notation "hvbox( L ‚ä¢ break term 90 T1 break [ d , break e ] ‚â´ break T2 )"
   non associative with precedence 45
   for @{ 'PSubst $L $T1 $d $e $T2 }.

(* Unfold *******************************************************************)

notation "hvbox( T1 break [ d , break e ] ‚â´* break T2 )"
   non associative with precedence 45
   for @{ 'PSubstStar $T1 $d $e $T2 }.

notation "hvbox( L ‚ä¢ break term 90 T1 break [ d , break e ] ‚â´* break T2 )"
   non associative with precedence 45
   for @{ 'PSubstStar $L $T1 $d $e $T2 }.

notation "hvbox( T1 break [ d , break e ] ‚â° break T2 )"
   non associative with precedence 45
   for @{ 'TSubst $T1 $d $e $T2 }.

notation "hvbox( L ‚ä¢ break term 90 T1 break [ d , break e ] ‚â° break T2 )"
   non associative with precedence 45
   for @{ 'TSubst $L $T1 $d $e $T2 }.

(* Static Typing ************************************************************)

notation "hvbox( L ‚ä¢ break term 90 T √∑ break A )"
   non associative with precedence 45
   for @{ 'AtomicArity $L $T $A }.

(* Reducibility *************************************************************)

notation "hvbox( ‚Ñù [ T ] )"
   non associative with precedence 45
   for @{ 'Reducible $T }.

notation "hvbox( L ‚ä¢ ‚Ñù [ T ] )"
   non associative with precedence 45
   for @{ 'Reducible $L $T }.

notation "hvbox( ùïÄ [ T ] )"
   non associative with precedence 45
   for @{ 'NotReducible $T }.

notation "hvbox( L ‚ä¢ ùïÄ [ T ] )"
   non associative with precedence 45
   for @{ 'NotReducible $L $T }.

notation "hvbox( ‚Ñï [ T ] )"
   non associative with precedence 45
   for @{ 'Normal $T }.

notation "hvbox( L ‚ä¢ ‚Ñï [ T ] )"
   non associative with precedence 45
   for @{ 'Normal $L $T }.

notation "hvbox( ùïé‚Ñç‚Ñù [ T ] )"
   non associative with precedence 45
   for @{ 'WHdReducible $T }.

notation "hvbox( L ‚ä¢ ùïé‚Ñç‚Ñù [ T ] )"
   non associative with precedence 45
   for @{ 'WHdReducible $L $T }.

notation "hvbox( ùïé‚ÑçùïÄ [ T ] )"
   non associative with precedence 45
   for @{ 'NotWHdReducible $T }.

notation "hvbox( L ‚ä¢ ùïé‚ÑçùïÄ [ T ] )"
   non associative with precedence 45
   for @{ 'NotWHdReducible $L $T }.

notation "hvbox( ùïé‚Ñç‚Ñï [ T ] )"
   non associative with precedence 45
   for @{ 'WHdNormal $T }.

notation "hvbox( L ‚ä¢ ùïé‚Ñç‚Ñï [ T ] )"
   non associative with precedence 45
   for @{ 'WHdNormal $L $T }.

notation "hvbox( T1 ‚áí break T2 )"
   non associative with precedence 45
   for @{ 'PRed $T1 $T2 }.

notation "hvbox( L ‚ä¢ break term 90 T1 ‚áí break T2 )"
   non associative with precedence 45
   for @{ 'PRed $L $T1 $T2 }.

notation "hvbox( L1 ‚ä¢ ‚áí break L2 )"
   non associative with precedence 45
   for @{ 'CPRed $L1 $L2 }.

(* Computation **************************************************************)

notation "hvbox( T1 ‚áí* break T2 )"
   non associative with precedence 45
   for @{ 'PRedStar $T1 $T2 }.

notation "hvbox( L ‚ä¢ break term 90 T1 ‚áí* break T2 )"
   non associative with precedence 45
   for @{ 'PRedStar $L $T1 $T2 }.

notation "hvbox( L1 ‚ä¢ ‚áí* break L2 )"
   non associative with precedence 45
   for @{ 'CPRedStar $L1 $L2 }.

notation "hvbox( ‚áì T  )"
   non associative with precedence 45
   for @{ 'SN $T }.

notation "hvbox( L ‚ä¢ ‚áì T )"
   non associative with precedence 45
   for @{ 'SN $L $T }.

notation "hvbox( { L, break T } œµ break „Äö A „Äõ )"
   non associative with precedence 45
   for @{ 'InEInt $L $T $A }.

notation "hvbox( R ‚ä¢ break { L, break T } œµ break „Äö A „Äõ )"
   non associative with precedence 45
   for @{ 'InEInt $R $L $T $A }.

notation "hvbox( T1 ‚äë break T2 )"
   non associative with precedence 45
   for @{ 'CrSubEq $T1 $T2 }.

notation "hvbox( T1 break [ R ] ‚äë break T2 )"
   non associative with precedence 45
   for @{ 'CrSubEq $T1 $R $T2 }.

(* Functional ***************************************************************)

notation "hvbox( ‚Üü [ d , break e ] break T )"
   non associative with precedence 80
   for @{ 'Lift $d $e $T }.

notation "hvbox( ‚Ü° [ d ‚Üê break V ] break T )"
   non associative with precedence 80
   for @{ 'Subst $V $d $T }.

