(**************************************************************************)
(*       ___                                                              *)
(*      ||M||                                                             *)
(*      ||A||       A project by Andrea Asperti                           *)
(*      ||T||                                                             *)
(*      ||I||       Developers:                                           *)
(*      ||T||         The HELM team.                                      *)
(*      ||A||         http://helm.cs.unibo.it                             *)
(*      \   /                                                             *)
(*       \ /        This file is distributed under the terms of the       *)
(*        v         GNU General Public License Version 2                  *)
(*                                                                        *)
(**************************************************************************)

include "basic_2/rt_computation/fpbs_cpxs.ma".
include "basic_2/rt_computation/fpbg_fqup.ma".
include "basic_2/rt_computation/fpbg_fpbs.ma".

(* EXAMPLES *****************************************************************)

(* Reflexivity of proper rst-computation: the term ApplOmega ****************)

definition ApplDelta: term ‚Üí nat ‚Üí term ‚âù ŒªW,s. +‚ìõW.‚ìê‚ãÜs.‚ìê#0.#0.

definition ApplOmega1: term ‚Üí nat ‚Üí term ‚âù ŒªW,s. ‚ìê(ApplDelta W s).(ApplDelta W s).

definition ApplOmega2: term ‚Üí nat ‚Üí term ‚âù ŒªW,s. +‚ìì‚ìùW.(ApplDelta W s).‚ìê‚ãÜs.‚ìê#0.#0.

definition ApplOmega3: term ‚Üí nat ‚Üí term ‚âù ŒªW,s. ‚ìê‚ãÜs.(ApplOmega1 W s).

(* Basic properties *********************************************************)

lemma ApplDelta_lifts (f:rtmap):
                      ‚àÄW1,W2,s. ‚¨Ü*[f] W1 ‚âò W2 ‚Üí
                      ‚¨Ü*[f] (ApplDelta W1 s) ‚âò (ApplDelta W2 s).
/5 width=1 by lifts_sort, lifts_lref, lifts_bind, lifts_flat/ qed.

lemma cpr_ApplOmega_12 (h): ‚àÄG,L,W,s. ‚¶ÉG, L‚¶Ñ ‚ä¢ ApplOmega1 W s ‚û°[h] ApplOmega2 W s.
/2 width=1 by cpm_beta/ qed.

lemma cpr_ApplOmega_23 (h): ‚àÄG,L,W,s. ‚¶ÉG, L‚¶Ñ ‚ä¢ ApplOmega2 W s ‚û°[h] ApplOmega3 W s.
#h #G #L #W1 #s elim (lifts_total W1 (ùêî‚ù¥1‚ùµ)) #W2 #HW12
@(cpm_zeta ‚Ä¶ (ApplOmega3 W2 s)) /4 width=1 by ApplDelta_lifts, lifts_flat/
@cpm_appl // @cpm_appl @(cpm_delta ‚Ä¶ (ApplDelta W1 s))
/2 width=1 by ApplDelta_lifts, cpm_eps/
qed.

lemma cpxs_ApplOmega_13 (h): ‚àÄG,L,W,s. ‚¶ÉG, L‚¶Ñ ‚ä¢ ApplOmega1 W s ‚¨à*[h] ApplOmega3 W s.
/4 width=4 by cpxs_strap1, cpm_fwd_cpx/ qed.

lemma fqup_ApplOmega_13: ‚àÄG,L,W,s. ‚¶ÉG, L, ApplOmega3 W s‚¶Ñ ‚äê+ ‚¶ÉG, L, ApplOmega1 W s‚¶Ñ.
/2 width=1 by/ qed.

(* Main properties **********************************************************)

theorem fpbg_refl (h) (o): ‚àÄG,L,W,s. ‚¶ÉG, L, ApplOmega1 W s‚¶Ñ >[h,o] ‚¶ÉG, L, ApplOmega1 W s‚¶Ñ.
/3 width=5 by fpbs_fpbg_trans, fqup_fpbg, cpxs_fpbs/ qed.
