name "static_2_src"

table {
   class "gray"
   [ { "component" * } {
        [ { "section" * } {
             [ [ "plane" ] "files" * ]
          }
        ]
     }
   ]
   class "water"
   [ { "iterated static typing" * } {
        [ { "iterated generic extension of a context-sensitive relation" * } {
             [ [ "for lenvs on referred entries" ] "rexs" + "( ? ‚™§*[?,?] ? )" "rexs_length" + "rexs_lex" + "rexs_drops" + "rexs_fqup" + "rexs_rexs" * ]
          }
        ]
     }
   ]
   class "green"
   [ { "static typing" * } {
        [ { "generic reducibility" * } {
             [ [ "restricted refinement for lenvs" ] "lsubc" + "( ? ‚ä¢ ? ‚´É[?] ? )" "lsubc_drops" + "lsubc_lsubr" + "lsubc_lsuba" * ]
             [ [ "candidates" ] "gcp_cr" + "( ‚ù®?,?,?‚ù© œµ ‚ü¶?‚üß[?] )" "gcp_aaa" * ]
             [ [ "computation properties" ] "gcp" *]
          }
        ]
        [ { "atomic arity assignment" * } {
             [ [ "restricted refinement for lenvs" ] "lsuba" + "( ? ‚ä¢ ? ‚´É‚Åù ? )" "lsuba_drops" + "lsuba_lsubr" + "lsuba_aaa" + "lsuba_lsuba" * ]
             [ [ "for terms" ] "aaa" + "( ‚ù®?,?‚ù© ‚ä¢ ? ‚Åù ? )" "aaa_drops" + "aaa_fqus" + "aaa_reqg" + "aaa_feqg" + "aaa_aaa" + "aaa_dec" * ]
          }
        ]
        [ { "sort-irrelevant equivalence" * } {
             [ [ "for closures on referred entries" ] "feqx" + "( ‚ù®?,?,?‚ù© ‚âÖ ‚ù®?,?,?‚ù© )" "feqx_feqx" * ]
             [ [ "for lenvs on referred entries" ] "reqx" + "( ? ‚âÖ[?] ? )" "reqx_reqx" * ]
          }
        ]
        [ { "syntactic equivalence" * } {
             [ [ "for lenvs on referred entries" ] "req" + "( ? ‚â°[?] ? )" * ]
          }
        ]
        [ { "generic equivalence" * } {
             [ [ "for closures on referred entries" ] "feqg" + "( ‚ù®?,?,?‚ù© ‚âõ[?] ‚ù®?,?,?‚ù© )" "feqg_length" + "feqg_fqu" + "feqg_fqup" + "feqg_fqus" + "feqg_feqg" * ]
             [ [ "for lenvs on referred entries" ] "reqg" + "( ? ‚âõ[?,?] ? )" "reqg_length" + "reqg_drops" + "reqg_fqup" + "reqg_fqus" + "reqg_reqg" * ]
          }
        ]
        [ { "generic extension of a context-sensitive relation" * } {
             [ [ "for lenvs on referred entries" ] "rex" + "( ? ‚™§[?,?] ? )" "rex_length" + "rex_lex" + "rex_drops" + "rex_fqup" + "rex_fsle" + "rex_rex" * ]
          }
        ]
        [ { "context-sensitive free variables" * } {
             [ [ "inclusion for restricted closures" ] "fsle" + "( ‚ù®?,?‚ù© ‚äÜ ‚ù®?,?‚ù© )" "fsle_length" + "fsle_drops" + "fsle_fqup" + "fsle_fsle" * ]
             [ [ "restricted refinement for lenvs" ] "lsubf" + "( ‚ù®?,?‚ù© ‚´ÉùêÖ+ ‚ù®?,?‚ù© )" "lsubf_lsubr" + "lsubf_frees" + "lsubf_lsubf" * ]
             [ [ "for terms" ] "frees" + "( ? ‚ä¢ ùêÖ+‚ù®?‚ù© ‚âò ? )" "frees_append" + "frees_drops" + "frees_fqup" + "frees_frees" * ]
          }
        ]
        [ { "local environments" * } {
             [ [ "restricted refinement" ] "lsubr" + "( ? ‚´É ? )" "lsubr_length" + "lsubr_drops" + "lsubr_lsubr" * ]
          }
        ]
     }
   ]
   class "grass"
   [ { "s-computation" * } {
        [ { "iterated structural successor" * } {
             [ [ "for closures" ] "fqus" + "( ‚ù®?,?,?‚ù© ‚¨Ç*[?] ‚ù®?,?,?‚ù© )" + "( ‚ù®?,?,?‚ù© ‚¨Ç* ‚ù®?,?,?‚ù© )" "fqus_weight" + "fqus_drops" + "fqus_fqup" + "fqus_fqus" * ]
             [ [ "proper for closures" ] "fqup" + "( ‚ù®?,?,?‚ù© ‚¨Ç+[?] ‚ù®?,?,?‚ù© )" + "( ‚ù®?,?,?‚ù© ‚¨Ç+ ‚ù®?,?,?‚ù© )" "fqup_weight" + "fqup_drops" + "fqup_fqup" * ]
          }
        ]
     }
   ]
   class "yellow"
   [ { "s-transition" * } {
        [ { "structural successor" * } {
             [ [ "for closures" ] "fquq" + "( ‚ù®?,?,?‚ù© ‚¨Ç‚∏Æ[?] ‚ù®?,?,?‚ù© )" + "( ‚ù®?,?,?‚ù© ‚¨Ç‚∏Æ ‚ù®?,?,?‚ù© )" "fquq_length" + "fquq_weight" * ]
             [ [ "proper for closures" ] "fqu" + "( ‚ù®?,?,?‚ù© ‚¨Ç[?] ‚ù®?,?,?‚ù© )" + "( ‚ù®?,?,?‚ù© ‚¨Ç ‚ù®?,?,?‚ù© )" "fqu_length" + "fqu_weight" + "fqu_teqg" * ]
          }
        ]
     }
   ]
   class "orange"
   [ { "relocation" * } {
        [ { "generic and uniform slicing" * } {
             [ [ "for lenvs" ] "drops" + "( ‚á©*[?,?] ? ‚âò ? )" + "( ‚á©[?] ? ‚âò ? )" "drops_ctc" + "drops_ltc" + "drops_weight" + "drops_length" + "drops_cext2" + "drops_sex" + "drops_lex" + "drops_seq" + "drops_drops" + "drops_vector" * ]
          }
        ]
        [ { "basic relocation" * } {
             [ [ "for terms" ] "lifts_basic" + "( ‚áß[?,?] ? ‚âò ? )" * ]
          }
        ]
        [ { "generic and uniform relocation" * } {
             [ [ "for binders" ] "lifts_bind" + "( ‚áß*[?] ? ‚âò ? )" + "( ‚áß[?] ? ‚âò ? )" "lifts_weight_bind" + "lifts_lifts_bind" * ]
             [ [ "for term vectors" ] "lifts_vector" + "( ‚áß*[?] ? ‚âò ? )" + "( ‚áß[?] ? ‚âò ? )" "lifts_lifts_vector" * ]
             [ [ "for terms" ] "lifts" + "( ‚áß*[?] ? ‚âò ? )" + "( ‚áß[?] ? ‚âò ? )" "lifts_simple" + "lifts_weight" + "lifts_teqg" + "lifts_teqx" + "lifts_teqw" + "lifts_teqo" + "lifts_lifts" * ]
          }
        ]
        [ { "syntactic equivalence" * } {
             [ [ "for lenvs on selected entries" ] "seq" + "( ? ‚â°[?] ? )" "seq_length" + "seq_seq" * ]
          }
        ]
        [ { "generic entrywise extension" * } {
             [ [ "for lenvs of one contex-sensitive relation" ] "lex" + "( ? ‚™§[?] ? )" "lex_tc" + "lex_length" + "lex_lex" * ]
             [ [ "for lenvs of two contex-sensitive relations" ] "sex" + "( ? ‚™§[?,?,?] ? )" "sex_tc" + "sex_length" + "sex_sex" * ]
          }
        ]
     }
   ]
   class "red"
   [ { "syntax" * } {
        [ { "applicability condition" * } {
             [ [ "preorder" ] "acle" + "( ? ‚äÜ ? )"  "acle_acle" * ]
             [ [ "properties" ] "ac" + "( ùüè )" + "( ùüê )" + "( ùõö )" * ]
          }
        ]
        [ { "equivalence up to exclusion binders" * } {
             [ [ "for lenvs" ] "lveq" + "( ? ‚âã‚ìß*[?,?] ? )" "lveq_length" + "lveq_lveq" * ]
          }
        ]
        [ { "append" * } {
             [ [ "for restricted closures" ] "fold" + "( ? + ? )" "fold_append" * ]
             [ [ "for lenvs" ] "append" + "( ? + ? )" "append_length" * ]
          }
        ]
        [ { "sort-irrelevant outer equivalence" * } {
             [ [ "for terms" ] "teqo" + "( ? ~ ? )" "teqo_simple" + "teqo_teqg" + "teqo_teqo" + "teqo_simple_vector" * ]
          }
        ]
        [ { "sort-irrelevant whd equivalence" * } {
             [ [ "for terms" ] "teqw" + "( ? ‚âÉ ? )" "teqw_simple" + "teqw_teqg" + "teqw_teqw" * ]
          }
        ]
        [ { "sort-irrelevant equivalence" * } {
             [ [ "" ] "teqx_ext" + "( ? ‚âÖ ? )" + "( ? ‚ä¢ ? ‚âÖ ? )" * ]
             [ [ "" ] "teqx" + "( ? ‚âÖ ? )" "teqx_teqx" * ]
          }
        ]
        [ { "syntactic equivalence" * } {
             [ [ "" ] "teq_ext" + "( ? ‚â° ? )" + "( ? ‚ä¢ ? ‚â° ? )" "teq_ext_teq_ext" * ]
             [ [ "" ] "teq" + "( ? ‚â° ? )" "teq_teq" * ]
          }
        ]
        [ { "generic equivalence" * } {
             [ [ "" ] "teqg_ext" + "( ? ‚âõ[?] ? )" + "( ? ‚ä¢ ? ‚âõ[?] ? )" * ]
             [ [ "" ] "teqg" + "( ? ‚âõ[?] ? )" "teqg_teqg" * ]
          }
        ]
        [ { "closures" * } {
             [ [ "" ] "cl_weight" + "( ‚ôØ‚ù®?,?,?‚ù© )" * ]
             [ [ "" ] "cl_restricted_weight" + "( ‚ôØ‚ù®?,?‚ù© )" * ]
          }
        ]
        [ { "global environments" * } {
             [ [ "" ] "genv_length" + "( |?| )" * ]
             [ [ "" ] "genv_weight" + "( ‚ôØ‚ù®?‚ù© )" * ]
             [ [ "" ] "genv" * ]
          }
        ]
        [ { "local environments" * } {
             [ [ "" ] "cext2" * ]
             [ [ "" ] "lenv_length" + "( |?| )" * ]
             [ [ "" ] "lenv_weight" + "( ‚ôØ‚ù®?‚ù© )" * ]
             [ [ "" ] "lenv" * ]
          }
        ]
        [ { "binders for local environments" * } {
             [ [ "" ] "ext2" "ext2_tc" + "ext2_ext2" * ]
             [ [ "" ] "bind" "bind_weight" * ]
          }
        ]
        [ { "terms" * } {
             [ [ "" ] "term_vector" + "( ‚í∂?.? )" * ]
             [ [ "" ] "term_simple" + "( ùêí‚ù®?‚ù© )"  * ]
             [ [ "" ] "term_weight" + "( ‚ôØ‚ù®?‚ù© )" * ]
             [ [ "" ] "term" * ]
          }
        ]
        [ { "items" * } {
             [ [ "" ] "item" * ]
          }
        ]
        [ { "sorts" * } {
             [ [ "degree" ] "sd" "sd_d" + "sd_lt" * ]
             [ [ "hierarchy" ] "sh" + "( ‚´Ø[?]? )" "sh_props" + "sh_lt" * ]
          }
        ]
        [ { "atomic arities" * } {
             [ [ "" ] "aarity" * ]
          }
        ]
     }
   ]
}

class "top"               { * }

class "capitalize italic" { 0 1 }

class "italic"            { 2 }
