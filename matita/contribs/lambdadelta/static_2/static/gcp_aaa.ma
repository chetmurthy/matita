(**************************************************************************)
(*       ___                                                              *)
(*      ||M||                                                             *)
(*      ||A||       A project by Andrea Asperti                           *)
(*      ||T||                                                             *)
(*      ||I||       Developers:                                           *)
(*      ||T||         The HELM team.                                      *)
(*      ||A||         http://helm.cs.unibo.it                             *)
(*      \   /                                                             *)
(*       \ /        This file is distributed under the terms of the       *)
(*        v         GNU General Public License Version 2                  *)
(*                                                                        *)
(**************************************************************************)

include "static_2/static/aaa_aaa.ma".
include "static_2/static/lsubc_drops.ma".

(* GENERIC COMPUTATION PROPERTIES *******************************************)

(* Main properties **********************************************************)

(* Basic_1: was: sc3_arity_csubc *)
theorem acr_aaa_lsubc_lifts (RR) (RS) (RP):
        gcp RR RS RP ‚Üí gcr RR RS RP RP ‚Üí
        ‚àÄG,L1,T,A. ‚ù®G,L1‚ù© ‚ä¢ T ‚Åù A ‚Üí ‚àÄb,f,L0. ‚á©*[b,f] L0 ‚âò L1 ‚Üí
        ‚àÄT0. ‚áß*[f] T ‚âò T0 ‚Üí ‚àÄL2. G ‚ä¢ L2 ‚´É[RP] L0 ‚Üí
        ‚ù®G,L2,T0‚ù© œµ ‚ü¶A‚üß[RP].
#RR #RS #RP #H1RP #H2RP #G #L1 #T @(fqup_wf_ind_eq (‚ìâ) ‚Ä¶ G L1 T) -G -L1 -T
#Z #Y #X #IH #G #L1 * [ * | * [ #p ] * ]
[ #s #HG #HL #HT #A #HA #b #f #L0 #HL01 #X0 #H0 #L2 #HL20 destruct -IH
  lapply (aaa_inv_sort ‚Ä¶ HA) -HA #H destruct
  >(lifts_inv_sort1 ‚Ä¶ H0) -H0
  lapply (acr_gcr ‚Ä¶ H1RP H2RP (‚ì™)) #HAtom
  lapply (s2 ‚Ä¶ HAtom G L2 (‚í∫)) /3 width=7 by cp1, simple_atom/
| #i #HG #HL #HT #A #HA #b #f #L0 #HL01 #X0 #H0 #L2 #HL20 destruct
  elim (aaa_inv_lref_drops ‚Ä¶ HA) -HA #I #K1 #V1 #HLK1 #HKV1
  elim (lifts_inv_lref1 ‚Ä¶ H0) -H0 #j #Hf #H destruct
  lapply (acr_gcr ‚Ä¶ H1RP H2RP A) #HA
  lapply (drops_trans ‚Ä¶ HL01 ‚Ä¶ HLK1 ??) -HL01 [3: |*: // ] #H
  elim (drops_split_trans ‚Ä¶ H) -H [ |*: /2 width=6 by pr_after_nat_uni/ ] #Y #HLK0 #HY
  lapply (drops_tls_at ‚Ä¶ Hf ‚Ä¶ HY) -Hf -HY #HY
  elim (drops_inv_skip2 ‚Ä¶ HY) -HY #Z #K0 #HK01 #HZ #H destruct
  elim (liftsb_inv_pair_sn ‚Ä¶ HZ) -HZ #V0 #HV10 #H destruct
  elim (lifts_total V0 (ùêî‚ù®‚Üëj‚ù©)) #V #HV0
  elim (lsubc_drops_trans_isuni ‚Ä¶ HL20 ‚Ä¶ HLK0) -HL20 -HLK0 // #Y #HLK2 #H
  elim (lsubc_inv_bind2 ‚Ä¶ H) -H *
  [ #K2 #HK20 #H destruct
    lapply (drops_isuni_fwd_drop2 ‚Ä¶ HLK2) // #HLK2b
    lapply (s5 ‚Ä¶ HA ? G ? ? (‚í∫) ‚Ä¶ HV0 ?) -HA
    /4 width=11 by acr_lifts, fqup_lref, drops_inv_gen/
  | #K2 #V2 #W2 #B #HKV2 #HK2V0 #HKV0B #_ #H1 #H2 destruct -IH -HLK1
    lapply (drops_isuni_fwd_drop2 ‚Ä¶ HLK2) // #HLK2b
    lapply (aaa_lifts ‚Ä¶ HKV1 ‚Ä¶ HK01 ‚Ä¶ HV10) -HKV1 -HK01 -HV10 #HKV0A
    lapply (aaa_mono ‚Ä¶ HKV0B ‚Ä¶ HKV0A) #H destruct -HKV0B -HKV0A
    elim (lifts_total V2 (ùêî‚ù®‚Üëj‚ù©)) #V3 #HV23
    lapply (s5 ‚Ä¶ HA ‚Ä¶ G ‚Ä¶ (‚í∫) ‚Ä¶ (‚ìùW2.V2) (‚ìùV.V3) ????)
    [3: |*: /2 width=9 by drops_inv_gen, lifts_flat/ ] -HLK2
    lapply (s7 ‚Ä¶ HA G L2 (‚í∫)) -HA /3 width=7 by acr_lifts/
  ]
| #l #HG #HL #HT #A #HA #b #f #L0 #HL01 #X0 #H0 #L2 #HL20 destruct -IH
  elim (aaa_inv_gref ‚Ä¶ HA)
| #V #T #HG #HL #HT #A #HA #b #f #L0 #HL01 #X0 #H0 #L2 #HL20 destruct
  elim (aaa_inv_abbr ‚Ä¶ HA) -HA #B #HV #HT
  elim (lifts_inv_bind1 ‚Ä¶ H0) -H0 #V0 #T0 #HV0 #HT0 #H destruct
  lapply (acr_gcr ‚Ä¶ H1RP H2RP A) #HA
  lapply (acr_gcr ‚Ä¶ H1RP H2RP B) #HB
  lapply (s1 ‚Ä¶ HB) -HB #HB
  lapply (s6 ‚Ä¶ HA G L2 (‚í∫) (‚í∫)) /5 width=10 by lsubc_bind, liftsv_nil, drops_skip, ext2_pair/
| #W #T #HG #HL #HT #Z0 #HA #b #f #L0 #HL01 #X0 #H0 #L2 #HL20 destruct
  elim (aaa_inv_abst ‚Ä¶ HA) -HA #B #A #HW #HT #H destruct
  elim (lifts_inv_bind1 ‚Ä¶ H0) -H0 #W0 #T0 #HW0 #HT0 #H destruct
  @(acr_abst  ‚Ä¶ H1RP H2RP) /2 width=10 by/
  #b3 #f3 #L3 #V3 #W3 #T3 #HL32 #HW03 #HT03 #H1B #H2B
  elim (drops_lsubc_trans ‚Ä¶ H1RP ‚Ä¶ HL32 ‚Ä¶ HL20) -L2 #L2 #HL32 #HL20
  lapply (aaa_lifts ‚Ä¶ HW ‚Ä¶ (f3‚àòf) L2 ‚Ä¶ W3 ?) -HW
  [4: |*: /2 width=8 by drops_trans, lifts_trans/ ] #HW3
  @(IH ‚Ä¶ ((‚´Øf3)‚àò‚´Øf) ‚Ä¶ (L2. ‚ìõW3)) -IH
  /4 width=12 by lsubc_beta, drops_trans, drops_skip, lifts_trans, ext2_pair/
| #V #T #HG #HL #HT #A #HA #b #f #L0 #HL01 #X0 #H0 #L2 #HL20 destruct
  elim (aaa_inv_appl ‚Ä¶ HA) -HA #B #HV #HT
  elim (lifts_inv_flat1 ‚Ä¶ H0) -H0 #V0 #T0 #HV0 #HT0 #H destruct
  lapply (IH ‚Ä¶ HT ‚Ä¶ HL01 ‚Ä¶ HT0 ‚Ä¶ HL20) -HT -HT0
  /3 width=10 by drops_refl, lifts_refl/
| #W #T #HG #HL #HT #A #HA #b #f #L0 #HL01 #X0 #H0 #L2 #HL20 destruct
  elim (aaa_inv_cast ‚Ä¶ HA) -HA #HW #HT
  elim (lifts_inv_flat1 ‚Ä¶ H0) -H0 #W0 #T0 #HW0 #HT0 #H destruct
  lapply (acr_gcr ‚Ä¶ H1RP H2RP A) #HA
  lapply (s7 ‚Ä¶ HA G L2 (‚í∫)) /3 width=10 by/
]
qed.

(* Basic_1: was: sc3_arity *)
lemma acr_aaa (RR) (RS) (RP):
      gcp RR RS RP ‚Üí gcr RR RS RP RP ‚Üí
      ‚àÄG,L,T,A. ‚ù®G,L‚ù© ‚ä¢ T ‚Åù A ‚Üí ‚ù®G,L,T‚ù© œµ ‚ü¶A‚üß[RP].
/3 width=9 by drops_refl, lifts_refl, acr_aaa_lsubc_lifts/ qed.

lemma gcr_aaa (RR) (RS) (RP):
      gcp RR RS RP ‚Üí gcr RR RS RP RP ‚Üí
      ‚àÄG,L,T,A. ‚ù®G,L‚ù© ‚ä¢ T ‚Åù A ‚Üí RP G L T.
#RR #RS #RP #H1RP #H2RP #G #L #T #A #HT
lapply (acr_gcr ‚Ä¶ H1RP H2RP A) #HA
@(s1 ‚Ä¶ HA) /2 width=4 by acr_aaa/
qed.
