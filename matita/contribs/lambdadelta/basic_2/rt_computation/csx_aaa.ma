(**************************************************************************)
(*       ___                                                              *)
(*      ||M||                                                             *)
(*      ||A||       A project by Andrea Asperti                           *)
(*      ||T||                                                             *)
(*      ||I||       Developers:                                           *)
(*      ||T||         The HELM team.                                      *)
(*      ||A||         http://helm.cs.unibo.it                             *)
(*      \   /                                                             *)
(*       \ /        This file is distributed under the terms of the       *)
(*        v         GNU General Public License Version 2                  *)
(*                                                                        *)
(**************************************************************************)

include "basic_2/static/gcp_aaa.ma".
include "basic_2/rt_computation/cpxs_aaa.ma".
include "basic_2/rt_computation/csx_gcp.ma".
include "basic_2/rt_computation/csx_gcr.ma".

(* STRONGLY NORMALIZING TERMS FOR UNCOUNTED PARALLEL RT-TRANSITION **********)

(* Main properties with atomic arity assignment *****************************)

theorem aaa_csx: ‚àÄh,o,G,L,T,A. ‚¶ÉG, L‚¶Ñ ‚ä¢ T ‚Åù A ‚Üí ‚¶ÉG, L‚¶Ñ ‚ä¢ ‚¨à*[h, o] ùêí‚¶ÉT‚¶Ñ.
#h #o #G #L #T #A #H
@(gcr_aaa ‚Ä¶ (csx_gcp h o) (csx_gcr h o) ‚Ä¶ H)
qed.

(* Advanced eliminators *****************************************************)

fact aaa_ind_csx_aux: ‚àÄh,o,G,L,A. ‚àÄR:predicate term.
                      (‚àÄT1. ‚¶ÉG, L‚¶Ñ ‚ä¢ T1 ‚Åù A ‚Üí
                            (‚àÄT2. ‚¶ÉG, L‚¶Ñ ‚ä¢ T1 ‚¨à[h] T2 ‚Üí (T1 ‚â°[h, o] T2 ‚Üí ‚ä•) ‚Üí R T2) ‚Üí R T1
                      ) ‚Üí
                      ‚àÄT. ‚¶ÉG, L‚¶Ñ ‚ä¢ ‚¨à*[h, o] ùêí‚¶ÉT‚¶Ñ ‚Üí ‚¶ÉG, L‚¶Ñ ‚ä¢ T ‚Åù A ‚Üí R T.
#h #o #G #L #A #R #IH #T #H @(csx_ind ‚Ä¶ H) -T /4 width=5 by cpx_aaa_conf/
qed-.

lemma aaa_ind_csx: ‚àÄh,o,G,L,A. ‚àÄR:predicate term.
                   (‚àÄT1. ‚¶ÉG, L‚¶Ñ ‚ä¢ T1 ‚Åù A ‚Üí
                         (‚àÄT2. ‚¶ÉG, L‚¶Ñ ‚ä¢ T1 ‚¨à[h] T2 ‚Üí (T1 ‚â°[h, o] T2 ‚Üí ‚ä•) ‚Üí R T2) ‚Üí R T1
                   ) ‚Üí
                   ‚àÄT. ‚¶ÉG, L‚¶Ñ ‚ä¢ T ‚Åù A ‚Üí R T.
/5 width=9 by aaa_ind_csx_aux, aaa_csx/ qed-.

fact aaa_ind_csx_cpxs_aux: ‚àÄh,o,G,L,A. ‚àÄR:predicate term.
                           (‚àÄT1. ‚¶ÉG, L‚¶Ñ ‚ä¢ T1 ‚Åù A ‚Üí
                                 (‚àÄT2. ‚¶ÉG, L‚¶Ñ ‚ä¢ T1 ‚¨à*[h] T2 ‚Üí (T1 ‚â°[h, o] T2 ‚Üí ‚ä•) ‚Üí R T2) ‚Üí R T1
                           ) ‚Üí
                           ‚àÄT. ‚¶ÉG, L‚¶Ñ ‚ä¢ ‚¨à*[h, o] ùêí‚¶ÉT‚¶Ñ ‚Üí ‚¶ÉG, L‚¶Ñ ‚ä¢ T ‚Åù A ‚Üí R T.
#h #o #G #L #A #R #IH #T #H @(csx_ind_cpxs ‚Ä¶ H) -T /4 width=5 by cpxs_aaa_conf/
qed-.

(* Basic_2A1: was: aaa_ind_csx_alt *)
lemma aaa_ind_csx_cpxs: ‚àÄh,o,G,L,A. ‚àÄR:predicate term.
                        (‚àÄT1. ‚¶ÉG, L‚¶Ñ ‚ä¢ T1 ‚Åù A ‚Üí
                              (‚àÄT2. ‚¶ÉG, L‚¶Ñ ‚ä¢ T1 ‚¨à*[h] T2 ‚Üí (T1 ‚â°[h, o] T2 ‚Üí ‚ä•) ‚Üí R T2) ‚Üí R T1
                        ) ‚Üí
                        ‚àÄT. ‚¶ÉG, L‚¶Ñ ‚ä¢ T ‚Åù A ‚Üí R T.
/5 width=9 by aaa_ind_csx_cpxs_aux, aaa_csx/ qed-.
