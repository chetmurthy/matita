(**************************************************************************)
(*       ___                                                              *)
(*      ||M||                                                             *)
(*      ||A||       A project by Andrea Asperti                           *)
(*      ||T||                                                             *)
(*      ||I||       Developers:                                           *)
(*      ||T||         The HELM team.                                      *)
(*      ||A||         http://helm.cs.unibo.it                             *)
(*      \   /                                                             *)
(*       \ /        This file is distributed under the terms of the       *)
(*        v         GNU General Public License Version 2                  *)
(*                                                                        *)
(**************************************************************************)

include "basic_2/reduction/cpx_lift.ma".
include "basic_2/reduction/cnx.ma".

(* CONTEXT-SENSITIVE EXTENDED NORMAL TERMS **********************************)

(* Advanced properties ******************************************************)

lemma cnx_lref_atom: ‚àÄh,g,G,L,i. ‚á©[0, i] L ‚â° ‚ãÜ ‚Üí ‚¶ÉG, L‚¶Ñ ‚ä¢ ùêç[h, g]‚¶É#i‚¶Ñ.
#h #g #G #L #i #HL #X #H
elim (cpx_inv_lref1 ‚Ä¶ H) -H // *
#I #K #V1 #V2 #HLK #_ #_
lapply (ldrop_mono ‚Ä¶ HL ‚Ä¶ HLK) -L #H destruct
qed.

(* Relocation properties ****************************************************)

lemma cnx_lift: ‚àÄh,g,G,L0,L,T,T0,d,e. ‚¶ÉG, L‚¶Ñ ‚ä¢ ùêç[h, g]‚¶ÉT‚¶Ñ ‚Üí ‚á©[d, e] L0 ‚â° L ‚Üí
                ‚áß[d, e] T ‚â° T0 ‚Üí ‚¶ÉG, L0‚¶Ñ ‚ä¢ ùêç[h, g]‚¶ÉT0‚¶Ñ.
#h #g #G #L0 #L #T #T0 #d #e #HLT #HL0 #HT0 #X #H
elim (cpx_inv_lift1 ‚Ä¶ H ‚Ä¶ HL0 ‚Ä¶ HT0) -L0 #T1 #HT10 #HT1
<(HLT ‚Ä¶ HT1) in HT0; -L #HT0
>(lift_mono ‚Ä¶ HT10 ‚Ä¶ HT0) -T1 -X //
qed.

lemma cnx_inv_lift: ‚àÄh,g,G,L0,L,T,T0,d,e. ‚¶ÉG, L0‚¶Ñ ‚ä¢ ùêç[h, g]‚¶ÉT0‚¶Ñ ‚Üí ‚á©[d, e] L0 ‚â° L ‚Üí
                    ‚áß[d, e] T ‚â° T0 ‚Üí ‚¶ÉG, L‚¶Ñ ‚ä¢ ùêç[h, g]‚¶ÉT‚¶Ñ.
#h #g #G #L0 #L #T #T0 #d #e #HLT0 #HL0 #HT0 #X #H
elim (lift_total X d e) #X0 #HX0
lapply (cpx_lift ‚Ä¶ H ‚Ä¶ HL0 ‚Ä¶ HT0 ‚Ä¶ HX0) -L #HTX0
>(HLT0 ‚Ä¶ HTX0) in HX0; -L0 -X0 #H
>(lift_inj ‚Ä¶ H ‚Ä¶ HT0) -T0 -X -d -e //
qed-.
