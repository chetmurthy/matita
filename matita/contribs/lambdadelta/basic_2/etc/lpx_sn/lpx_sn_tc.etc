(**************************************************************************)
(*       ___                                                              *)
(*      ||M||                                                             *)
(*      ||A||       A project by Andrea Asperti                           *)
(*      ||T||                                                             *)
(*      ||I||       Developers:                                           *)
(*      ||T||         The HELM team.                                      *)
(*      ||A||         http://helm.cs.unibo.it                             *)
(*      \   /                                                             *)
(*       \ /        This file is distributed under the terms of the       *)
(*        v         GNU General Public License Version 2                  *)
(*                                                                        *)
(**************************************************************************)

include "basic_2/substitution/lpx_sn.ma".

(* SN POINTWISE EXTENSION OF A CONTEXT-SENSITIVE REALTION FOR TERMS *********)

(* Properties on transitive_closure *****************************************)

lemma lpx_sn_LTC_TC_lpx_sn: ∀R. (∀L. reflexive … (R L)) →
                            ∀L1,L2. lpx_sn (LTC … R) L1 L2 →
                            TC … (lpx_sn R) L1 L2.
#R #HR #L1 #L2 #H elim H -L1 -L2
/2 width=1 by TC_lpx_sn_pair, lpx_sn_atom, inj/
qed-.

(* Inversion lemmas on transitive closure ***********************************)

lemma TC_lpx_sn_ind: ∀R. c_rs_transitive … R (λ_. lpx_sn R) →
                     ∀S:relation lenv.
                     S (⋆) (⋆) → (
                        ∀I,K1,K2,V1,V2.
                        TC … (lpx_sn R) K1 K2 → LTC … R K1 V1 V2 →
                        S K1 K2 → S (K1.ⓑ{I}V1) (K2.ⓑ{I}V2)
                     ) →
                     ∀L2,L1. TC … (lpx_sn R) L1 L2 → S L1 L2.
#R #HR #S #IH1 #IH2 #L2 elim L2 -L2
[ #X #H >(TC_lpx_sn_inv_atom2 … H) -X //
| #L2 #I #V2 #IHL2 #X #H
  elim (TC_lpx_sn_inv_pair2 … H) // -H -HR
  #L1 #V1 #HL12 #HV12 #H destruct /3 width=1 by/
]
qed-.

lemma TC_lpx_sn_inv_lpx_sn_LTC: ∀R. c_rs_transitive … R (λ_. lpx_sn R) →
                                ∀L1,L2. TC … (lpx_sn R) L1 L2 →
                                lpx_sn (LTC … R) L1 L2.
/3 width=4 by TC_lpx_sn_ind, lpx_sn_pair/ qed-.
