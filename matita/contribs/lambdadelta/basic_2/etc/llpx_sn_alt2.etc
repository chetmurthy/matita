(**************************************************************************)
(*       ___                                                              *)
(*      ||M||                                                             *)
(*      ||A||       A project by Andrea Asperti                           *)
(*      ||T||                                                             *)
(*      ||I||       Developers:                                           *)
(*      ||T||         The HELM team.                                      *)
(*      ||A||         http://helm.cs.unibo.it                             *)
(*      \   /                                                             *)
(*       \ /        This file is distributed under the terms of the       *)
(*        v         GNU General Public License Version 2                  *)
(*                                                                        *)
(**************************************************************************)

include "basic_2/substitution/cofrees_lift.ma".
include "basic_2/substitution/llpx_sn_alt1.ma".

(* LAZY SN POINTWISE EXTENSION OF A CONTEXT-SENSITIVE REALTION FOR TERMS ****)

(* alternative definition of llpx_sn (not recursive) *)
definition llpx_sn_alt2: relation4 bind2 lenv term term ‚Üí relation4 ynat term lenv lenv ‚âù
                         ŒªR,d,T,L1,L2. |L1| = |L2| ‚àß
                         (‚àÄI1,I2,K1,K2,V1,V2,i. d ‚â§ yinj i ‚Üí (L1 ‚ä¢ i ~œµ ùêÖ*[d]‚¶ÉT‚¶Ñ ‚Üí ‚ä•) ‚Üí
                            ‚á©[i] L1 ‚â° K1.‚ìë{I1}V1 ‚Üí ‚á©[i] L2 ‚â° K2.‚ìë{I2}V2 ‚Üí
                            I1 = I2 ‚àß R I1 K1 V1 V2
                         ).

(* Main properties **********************************************************)

lemma cpy_inv_nlift2_be: ‚àÄG,L,U1,U2,d. ‚¶ÉG, L‚¶Ñ ‚ä¢ U1 ‚ñ∂[d, ‚àû] U2 ‚Üí ‚àÄi. d ‚â§ yinj i ‚Üí
                         ‚àÄK,s. ‚á©[s, i, 1] L ‚â° K ‚Üí
                         (‚àÄT2. ‚áß[i, 1] T2 ‚â° U2 ‚Üí ‚ä•) ‚Üí (‚àÄT1. ‚áß[i, 1] T1 ‚â° U1 ‚Üí ‚ä•).
#G #L #U1 #U2 #d #HU12 #i #Hdi #K #s #HLK #HnU2 #T1 #HTU1
elim (cpy_inv_lift1_be ‚Ä¶ HU12 ‚Ä¶ HLK ‚Ä¶ HTU1) /2 width=2 by/
qed-.

theorem llpx_sn_llpx_sn_alt2: ‚àÄR,L1,L2,T,d. llpx_sn R d T L1 L2 ‚Üí llpx_sn_alt2 R d T L1 L2.
#R #L1 #L2 #U1 #d #H elim (llpx_sn_inv_alt1 ‚Ä¶ H) -H
#HL12 #IH @conj // -HL12
#I1 #I2 #K1 #K2 #V1 #V2 #i #Hdi #HnU1 #HLK1 #HLK2 elim (frees_inv_gen ‚Ä¶ HnU1) -HnU1
#U2 #H generalize in match IH; -IH @(cpys_ind_dx ‚Ä¶ H) -U1
[ #IH #HnU2 elim (IH ‚Ä¶ HnU2 ‚Ä¶ HLK1 HLK2) -L1 -L2 -U2 /2 width=1 by conj/
| #U1 #U0 #HU10 #_ #IHU02 #IH #HnU2 @IHU02 /2 width=2 by/ -I1 -I2 -K1 -K2 -V1 -V2 -U2 -i
  #I1 #I2 #K1 #K2 #V1 #V2 #i #Hdi #HnU0 #HLK1 #HLK2 @(IH ‚Ä¶ HLK1 HLK2) -IH // -R -I2 -L2 -K2 -V2
  @(cpy_inv_nlift2_be ‚Ä¶ HU10) /2 width=3 by/   
