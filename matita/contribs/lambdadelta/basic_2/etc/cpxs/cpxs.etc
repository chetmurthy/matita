lemma lsubr_cpxs_trans: ‚àÄh,o,G. lsub_trans ‚Ä¶ (cpxs h o G) lsubr.
/3 width=5 by lsubr_cpx_trans, LTC_lsub_trans/
qed-.

lemma cprs_cpxs: ‚àÄh,o,G,L,T1,T2. ‚¶ÉG, L‚¶Ñ ‚ä¢ T1 ‚¨à* T2 ‚Üí ‚¶ÉG, L‚¶Ñ ‚ä¢ T1 ‚¨à*[h] T2.
#h #o #G #L #T1 #T2 #H @(cprs_ind ‚Ä¶ H) -T2 /3 width=3 by cpxs_strap1,
cpr_cpx/
qed.

lemma cpxs_inv_cnx1: ‚àÄh,o,G,L,T,U. ‚¶ÉG, L‚¶Ñ ‚ä¢ T ‚¨à*[h] U ‚Üí ‚¶ÉG, L‚¶Ñ ‚ä¢ ‚¨à[h]
ùêç‚¶ÉT‚¶Ñ ‚Üí T = U.
#h #o #G #L #T #U #H @(cpxs_ind_dx ‚Ä¶ H) -T //
#T0 #T #H1T0 #_ #IHT #H2T0
lapply (H2T0 ‚Ä¶ H1T0) -H1T0 #H destruct /2 width=1 by/
qed-.

lemma cpxs_neq_inv_step_sn: ‚àÄh,o,G,L,T1,T2. ‚¶ÉG, L‚¶Ñ ‚ä¢ T1 ‚¨à*[h] T2 ‚Üí (T1 = T2 ‚Üí ‚ä•) ‚Üí
                            ‚àÉ‚àÉT. ‚¶ÉG, L‚¶Ñ ‚ä¢ T1 ‚¨à[h] T & T1 = T ‚Üí ‚ä• & ‚¶ÉG, L‚¶Ñ ‚ä¢ T ‚¨à*[h] T2.
#h #o #G #L #T1 #T2 #H @(cpxs_ind_dx ‚Ä¶ H) -T1
[ #H elim H -H //
| #T1 #T #H1 #H2 #IH2 #H12 elim (eq_term_dec T1 T) #H destruct
  [ -H1 -H2 /3 width=1 by/
  | -IH2 /3 width=4 by ex3_intro/ (**) (* auto fails without clear *)
  ]
]
qed-.
