(* Note: this does not hold since L = Y.‚ìß, U = #0, f = ‚´Øg requires T = #(-1) *)
lemma frees_inv_drops: ‚àÄf2,L,U. L ‚ä¢ ùêÖ*‚¶ÉU‚¶Ñ ‚â° f2 ‚Üí
                       ‚àÄf,K. ‚¨á*[‚ìâ, f] L ‚â° K ‚Üí ‚àÄf1. f ~‚äö f1 ‚â° f2 ‚Üí
                       ‚àÉ‚àÉT. K ‚ä¢ ùêÖ*‚¶ÉT‚¶Ñ ‚â° f1 & ‚¨Ü*[f] T ‚â° U.
#f2 #L #U #H lapply (frees_fwd_isfin ‚Ä¶ H) elim H -f2 -L -U
[ #f2 #I #Hf2 #_ #f #K #H1 #f1 #H2
  lapply (coafter_fwd_isid2 ‚Ä¶ H2 ??) -H2 // -Hf2 #Hf1
  elim (drops_inv_atom1 ‚Ä¶ H1) -H1 #H #Hf destruct
  /4 width=3 by frees_atom, lifts_refl, ex2_intro/
| #f2 #I #L #s #_ #IH #Hf2 #f #Y #H1 #f1 #H2
  lapply (isfin_fwd_push ‚Ä¶ Hf2 ??) -Hf2 [3: |*: // ] #Hf2
  elim (coafter_inv_xxp ‚Ä¶ H2) -H2 [1,3: * |*: // ]
  [ #g #g1 #Hf2 #H #H0 destruct
    elim (drops_inv_skip1 ‚Ä¶ H1) -H1 #Z #K #HLK #_ #H destruct
  | #g #Hf2 #H destruct
    lapply (drops_inv_drop1 ‚Ä¶ H1) -H1 #HLK
  ]
  elim (IH ‚Ä¶ HLK ‚Ä¶ Hf2) -L // -f2 #X #Hg1 #HX
  lapply (lifts_inv_sort2 ‚Ä¶ HX) -HX #H destruct
  /3 width=3 by frees_sort, lifts_sort, ex2_intro/
| #f2 #I #L #W #_ #IH #Hf2 #f #Y #H1 #f1 #H2
  lapply (isfin_inv_next ‚Ä¶ Hf2 ??) -Hf2 [3: |*: // ] #Hf2
  elim (coafter_inv_xxn ‚Ä¶ H2) -H2 [ |*: // ] #g #g1 #Hf2 #H0 #H destruct
  elim (drops_inv_skip1 ‚Ä¶ H1) -H1 #J #K #HLK #HJI #H destruct
  elim (liftsb_inv_pair_dx ‚Ä¶ HJI) -HJI #V #HVW #H destruct
  elim (IH ‚Ä¶ HLK ‚Ä¶ Hf2) -L // -f2 #X #Hg1 #HX
  lapply (lifts_inj ‚Ä¶ HX ‚Ä¶ HVW) -W #H destruct
  /3 width=3 by frees_zero, lifts_lref, ex2_intro/
| #f2 #L #Hf2 #_ #f #Y #H1 #f1 #H2
  lapply (coafter_fwd_isid2 ‚Ä¶ H2 ??) -H2 // -Hf2 #Hf1
  elim (pn_split f) * #g #H destruct
  [ elim (drops_inv_skip1 ‚Ä¶ H1) -H1 #J #K #HLK #HJI #H destruct
    lapply  (liftsb_inv_unit_dx ‚Ä¶ HJI) -HJI #H destruct
    /3 width=3 by frees_void, lifts_lref, ex2_intro/
  | lapply (drops_inv_drop1 ‚Ä¶ H1) -H1 #H1
| #f2 #I #L #j #_ #IH #Hf2 #f #Y #H1 #f1 #H2
  lapply (isfin_fwd_push ‚Ä¶ Hf2 ??) -Hf2 [3: |*: // ] #Hf2
  elim (coafter_inv_xxp ‚Ä¶ H2) -H2 [1,3: * |*: // ]
  [ #g #g1 #Hf2 #H #H0 destruct
    elim (drops_inv_skip1 ‚Ä¶ H1) -H1 #J #K #HLK #_ #H destruct
  | #g #Hf2 #H destruct
    lapply (drops_inv_drop1 ‚Ä¶ H1) -H1 #HLK (* cannot continue *)
  ]
  elim (IH ‚Ä¶ HLK ‚Ä¶ Hf2) -L // -f2 #X #Hg1 #HX
  elim (lifts_inv_lref2 ‚Ä¶ HX) -HX #i #Hij #H destruct
  /4 width=7 by frees_lref, lifts_lref, at_S1, at_next, ex2_intro/
| #f2 #I #L #l #_ #IH #Hf2 #f #Y #H1 #f1 #H2
  lapply (isfin_fwd_push ‚Ä¶ Hf2 ??) -Hf2 [3: |*: // ] #Hf2
  elim (coafter_inv_xxp ‚Ä¶ H2) -H2 [1,3: * |*: // ]
  [ #g #g1 #Hf2 #H #H0 destruct
    elim (drops_inv_skip1 ‚Ä¶ H1) -H1 #J #K #HLK #_ #H destruct
  | #g #Hf2 #H destruct
    lapply (drops_inv_drop1 ‚Ä¶ H1) -H1 #HLK
  ]
  elim (IH ‚Ä¶ HLK ‚Ä¶ Hf2) -L // -f2 #X #Hg1 #HX
  lapply (lifts_inv_gref2 ‚Ä¶ HX) -HX #H destruct
  /3 width=3 by frees_gref, lifts_gref, ex2_intro/
| #f2W #f2U #f2 #p #I #L #W #U #_ #_ #H1f2 #IHW #IHU #H2f2 #f #K #H1 #f1 #H2
  elim (sor_inv_isfin3 ‚Ä¶ H1f2) // #H1f2W #H
  lapply (isfin_inv_tl ‚Ä¶ H) -H #H1f2U
  elim (coafter_inv_sor ‚Ä¶ H2 ‚Ä¶ H1f2) -H2 -H1f2 // #f1W #f1U #H2f2W #H #Hf1
  elim (coafter_inv_tl0 ‚Ä¶ H) -H #g1 #H2f2U #H destruct
  elim (IHW ‚Ä¶ H1 ‚Ä¶ H2f2W) -IHW -H2f2W // -H1f2W #V #Hf1W #HVW
  elim (IHU ‚Ä¶ H2f2U) -IHU -H2f2U
  /3 width=5 by frees_bind, drops_skip, lifts_bind, ext2_pair, ex2_intro/
| #f2W #f2U #f2 #I #L #W #U #_ #_ #H1f2 #IHW #IHU #H2f2 #f #K #H1 #f1 #H2
  elim (sor_inv_isfin3 ‚Ä¶ H1f2) // #H1f2W #H1f2U
  elim (coafter_inv_sor ‚Ä¶ H2 ‚Ä¶ H1f2) -H2 -H1f2 // #f1W #f1U #H2f2W #H2f2U #Hf1
  elim (IHW ‚Ä¶ H1 ‚Ä¶ H2f2W) -IHW -H2f2W // -H1f2W
  elim (IHU ‚Ä¶ H1 ‚Ä¶ H2f2U) -L -H2f2U
  /3 width=5 by frees_flat, lifts_flat, ex2_intro/
]
qed-.
