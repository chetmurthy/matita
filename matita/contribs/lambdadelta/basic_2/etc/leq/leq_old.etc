(**************************************************************************)
(*       ___                                                              *)
(*      ||M||                                                             *)
(*      ||A||       A project by Andrea Asperti                           *)
(*      ||T||                                                             *)
(*      ||I||       Developers:                                           *)
(*      ||T||         The HELM team.                                      *)
(*      ||A||         http://helm.cs.unibo.it                             *)
(*      \   /                                                             *)
(*       \ /        This file is distributed under the terms of the       *)
(*        v         GNU General Public License Version 2                  *)
(*                                                                        *)
(**************************************************************************)

include "Basic-2/grammar/lenv_length.ma".

(* LOCAL ENVIRONMENT EQUALITY ***********************************************)

interpretation "local environment equality" 'Eq L1 d e L2 = (leq L1 d e L2).

(* Basic properties *********************************************************)

| leq_comp: ‚àÄL1,L2,I1,I2,V1,V2.
            leq L1 0 0 L2 ‚Üí leq (L1. ùïì{I1} V1) 0 0 (L2. ùïì{I2} V2)

lemma leq_fwd_length: ‚àÄL1,L2,d,e. L1 [d, e] ‚âà L2 ‚Üí |L1| = |L2|.
#L1 #L2 #d #e #H elim H -H L1 L2 d e; normalize //
qed.  

(* Basic inversion lemmas ***************************************************)

lemma leq_inv_sort1_aux: ‚àÄL1,L2,d,e. L1 [d, e] ‚âà L2 ‚Üí L1 = ‚ãÜ ‚Üí L2 = ‚ãÜ.
#L1 #L2 #d #e #H elim H -H L1 L2 d e
[ //
| #L1 #L2 #I1 #I2 #V1 #V2 #_ #_ #H destruct
| #L1 #L2 #I #V #e #_ #_ #H destruct
| #L1 #L2 #I1 #I2 #V1 #V2 #d #e #_ #_ #H destruct
qed.

lemma leq_inv_sort1: ‚àÄL2,d,e. ‚ãÜ [d, e] ‚âà L2 ‚Üí L2 = ‚ãÜ.
/2 width=5/ qed.

lemma leq_inv_sort2: ‚àÄL1,d,e. L1 [d, e] ‚âà ‚ãÜ ‚Üí L1 = ‚ãÜ.
/3/ qed.
