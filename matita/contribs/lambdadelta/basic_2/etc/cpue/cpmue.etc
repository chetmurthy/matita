(**************************************************************************)
(*       ___                                                              *)
(*      ||M||                                                             *)
(*      ||A||       A project by Andrea Asperti                           *)
(*      ||T||                                                             *)
(*      ||I||       Developers:                                           *)
(*      ||T||         The HELM team.                                      *)
(*      ||A||         http://helm.cs.unibo.it                             *)
(*      \   /                                                             *)
(*       \ /        This file is distributed under the terms of the       *)
(*        v         GNU General Public License Version 2                  *)
(*                                                                        *)
(**************************************************************************)

include "basic_2/notation/relations/predevalstar_6.ma".
include "basic_2/rt_transition/cnu.ma".
include "basic_2/rt_computation/cpms.ma".

(* T-UNBOUND EVALUATION FOR T-BOUND RT-TRANSITION ON TERMS ******************)

definition cpmue (h) (n) (G) (L): relation2 term term ‚âù
           ŒªT1,T2. ‚àß‚àß ‚¶ÉG,L‚¶Ñ ‚ä¢ T1 ‚û°*[n,h] T2 & ‚¶ÉG,L‚¶Ñ ‚ä¢ ‚•≤[h] ùêç‚¶ÉT2‚¶Ñ.

interpretation "t-unbound evaluation for t-bound context-sensitive parallel rt-transition (term)"
   'PRedEvalStar h n G L T1 T2 = (cpmue h n G L T1 T2).

definition R_cpmue (h) (G) (L) (T): predicate nat ‚âù
           Œªn. ‚àÉU. ‚¶ÉG,L‚¶Ñ ‚ä¢ T ‚û°*[h,n] ùêç*‚¶ÉU‚¶Ñ.

(* Basic properties *********************************************************)

lemma cpmue_intro (h) (n) (G) (L):
      ‚àÄT1,T2. ‚¶ÉG,L‚¶Ñ ‚ä¢ T1 ‚û°*[n,h] T2 ‚Üí ‚¶ÉG,L‚¶Ñ ‚ä¢ ‚•≤[h] ùêç‚¶ÉT2‚¶Ñ ‚Üí ‚¶ÉG,L‚¶Ñ ‚ä¢ T1 ‚û°*[h,n] ùêç*‚¶ÉT2‚¶Ñ.
/2 width=1 by conj/ qed.

(* Basic forward lemmas *****************************************************)

lemma cpmue_fwd_cpms (h) (n) (G) (L):
      ‚àÄT1,T2. ‚¶ÉG,L‚¶Ñ ‚ä¢ T1 ‚û°*[h,n] ùêç*‚¶ÉT2‚¶Ñ ‚Üí ‚¶ÉG,L‚¶Ñ ‚ä¢ T1 ‚û°*[n,h] T2.
#h #n #G #L #T1 #T2 * #HT12 #_ //
qed-.
