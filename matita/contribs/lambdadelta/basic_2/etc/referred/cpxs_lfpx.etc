(**************************************************************************)
(*       ___                                                              *)
(*      ||M||                                                             *)
(*      ||A||       A project by Andrea Asperti                           *)
(*      ||T||                                                             *)
(*      ||I||       Developers:                                           *)
(*      ||T||         The HELM team.                                      *)
(*      ||A||         http://helm.cs.unibo.it                             *)
(*      \   /                                                             *)
(*       \ /        This file is distributed under the terms of the       *)
(*        v         GNU General Public License Version 2                  *)
(*                                                                        *)
(**************************************************************************)

include "basic_2/rt_transition/cpx_fqus.ma".
include "basic_2/rt_transition/lfpx_fquq.ma".
include "basic_2/rt_computation/cpxs_drops.ma".
include "basic_2/rt_computation/cpxs_cpxs.ma".

(* UNBOUND CONTEXT-SENSITIVE PARALLEL RT-COMPUTATION FOR TERMS **************)

(* Properties with unbound parallel rt-transition on referred entries *******)

lemma lfpx_cpxs_conf: ∀h,G. s_r_confluent1 … (cpxs h G) (lfpx h G).
/3 width=5 by lfpx_cpx_conf, s_r_conf1_CTC1/ qed-.

lemma lfpx_cpx_trans: ∀h,G. s_r_transitive … (cpx h G) (lfpx h G).
#h #G #L2 #T1 #T2 #H @(cpx_ind … H) -G -L2 -T1 -T2 //
[ #G #L2 #s1 #L1 #H elim (lfpx_inv_sort … H) -H * /2 width=1 by cpx_cpxs/
| #I #G #L2 #V #V2 #W2 #_ #IH #HVW2 #Y1 #H
  elim (lfpx_inv_zero_pair_dx … H) -H #L1 #V1 #HL1 #HV1 #H destruct
  /5 width=3 by lfpx_cpx_conf, cpxs_delta, cpxs_strap2/
| #I2 #G #L2 #V2 #W2 #i #_ #IH #HVW2 #Y1 #H
  elim (lfpx_inv_lref_bind_dx … H) -H #I1 #L1 #HL1 #H destruct
  /4 width=3 by cpxs_lref, cpxs_strap2/
| #p #I #G #L2 #V #V2 #T #T2 #_ #_ #IHV #IHT #L1 #H
  elim (lfpx_inv_bind … H) -H /3 width=1 by cpxs_bind/
| #I #G #L2 #V #V2 #T #T2 #_ #_ #IHV #IHT #L1 #H
  elim (lfpx_inv_flat … H) -H /3 width=1 by cpxs_flat/
| #G #L2 #V #T #T2 #T0 #_ #IH #HT02 #L1 #H
  elim (lfpx_inv_bind … H) -H /3 width=3 by cpxs_zeta/
| #G #L2 #V #T #T2 #_ #IH #L1 #H
  elim (lfpx_inv_flat … H) -H /3 width=1 by cpxs_eps/
| #G #L2 #V #V2 #T #_ #IH #L1 #H
  elim (lfpx_inv_flat … H) -H /3 width=1 by cpxs_ee/
| #p #G #L2 #V #V2 #W #W2 #T #T2 #_ #_ #_ #IHV #IHW #IHT #L1 #H
  elim (lfpx_inv_flat … H) -H #HV #H
  elim (lfpx_inv_bind … H) -H /3 width=1 by cpxs_beta/
| #p #G #L2 #V #V2 #V0 #W #W2 #T #T2 #_ #_ #_ #IHV #IHW #IHT #HV20 #L1 #H
  elim (lfpx_inv_flat … H) -H #HV #H
  elim (lfpx_inv_bind … H) -H /3 width=3 by cpxs_theta/
]
qed.

lemma lfpx_cpxs_trans: ∀h,G. s_rs_transitive … (cpx h G) (lfpx h G).
/3 width=6 by lfpx_cpx_conf, lfpx_cpx_trans, s_r_trans_CTC1/
qed-.

(* Properties with plus-iterated structural successor for closures **********)

lemma lfpx_fqup_trans: ∀h,b,G1,G2,L1,L2,T1,T2. ⦃G1, L1, T1⦄ ⊐+[b] ⦃G2, L2, T2⦄ →
                       ∀K1. ⦃G1, K1⦄ ⊢ ⬈[h, T1] L1 →
                       ∃∃K2,T. ⦃G1, K1⦄ ⊢ T1 ⬈*[h] T & ⦃G1, K1, T⦄ ⊐+[b] ⦃G2, K2, T2⦄ & ⦃G2, K2⦄ ⊢ ⬈[h, T2] L2.
#h #b #G1 #G2 #L1 #L2 #T1 #T2 #H @(fqup_ind … H) -G2 -L2 -T2
[ #G2 #L2 #T2 #H12 #K1 #HKL1 elim (lfpx_fqu_trans … H12 … HKL1) -L1
  /3 width=5 by cpx_cpxs, fqu_fqup, ex3_2_intro/
| #G #G2 #L #L2 #T #T2 #_ #H2 #IH1 #K1 #HLK1 elim (IH1 … HLK1) -L1
  #L0 #T0 #HT10 #HT0 #HL0 elim (lfpx_fqu_trans … H2 … HL0) -L
  #L #T3 #HT3 #HT32 #HL2 elim (fqup_cpx_trans … HT0 … HT3) -T
  /3 width=7 by cpxs_strap1, fqup_strap1, ex3_2_intro/
]
qed-.

(* Properties with star-iterated structural successor for closures **********)

lemma lfpx_fqus_trans: ∀h,b,G1,G2,L1,L2,T1,T2. ⦃G1, L1, T1⦄ ⊐*[b] ⦃G2, L2, T2⦄ →
                       ∀K1. ⦃G1, K1⦄ ⊢ ⬈[h, T1] L1 →
                       ∃∃K2,T. ⦃G1, K1⦄ ⊢ T1 ⬈*[h] T & ⦃G1, K1, T⦄ ⊐*[b] ⦃G2, K2, T2⦄ & ⦃G2, K2⦄ ⊢ ⬈[h, T2] L2.
#h #b #G1 #G2 #L1 #L2 #T1 #T2 #H #K1 #HKL1 elim (fqus_inv_fqup … H) -H
[ #H12 elim (lfpx_fqup_trans … H12 … HKL1) -L1 /3 width=5 by fqup_fqus, ex3_2_intro/
| * #H1 #H2 #H3 destruct /2 width=5 by ex3_2_intro/
]
qed-.
