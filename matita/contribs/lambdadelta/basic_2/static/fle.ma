(**************************************************************************)
(*       ___                                                              *)
(*      ||M||                                                             *)
(*      ||A||       A project by Andrea Asperti                           *)
(*      ||T||                                                             *)
(*      ||I||       Developers:                                           *)
(*      ||T||         The HELM team.                                      *)
(*      ||A||         http://helm.cs.unibo.it                             *)
(*      \   /                                                             *)
(*       \ /        This file is distributed under the terms of the       *)
(*        v         GNU General Public License Version 2                  *)
(*                                                                        *)
(**************************************************************************)

include "ground_2/relocation/rtmap_id.ma".
include "basic_2/notation/relations/subseteq_4.ma".
include "basic_2/static/frees.ma".

(* FREE VARIABLES INCLUSION FOR RESTRICTED CLOSURES *************************)

definition fle: bi_relation lenv term ‚âù ŒªL1,T1,L2,T2.
                ‚àÉ‚àÉf1,f2. L1 ‚ä¢ ùêÖ*‚¶ÉT1‚¶Ñ ‚â° f1 & L2 ‚ä¢ ùêÖ*‚¶ÉT2‚¶Ñ ‚â° f2 & f1 ‚äÜ f2.

interpretation "free variables inclusion (restricted closure)"
   'SubSetEq L1 T1 L2 T2 = (fle L1 T1 L2 T2).

(* Basic properties *********************************************************)

lemma fle_sort: ‚àÄL1,L2,s1,s2. ‚¶ÉL1, ‚ãÜs1‚¶Ñ ‚äÜ ‚¶ÉL2, ‚ãÜs2‚¶Ñ.
/3 width=5 by frees_sort, sle_refl, ex3_2_intro/ qed.

lemma fle_gref: ‚àÄL1,L2,l1,l2. ‚¶ÉL1, ¬ßl1‚¶Ñ ‚äÜ ‚¶ÉL2, ¬ßl2‚¶Ñ.
/3 width=5 by frees_gref, sle_refl, ex3_2_intro/ qed.

lemma fle_bind: ‚àÄL1,L2,V1,V2. ‚¶ÉL1, V1‚¶Ñ ‚äÜ ‚¶ÉL2, V2‚¶Ñ ‚Üí
                ‚àÄI1,I2,T1,T2. ‚¶ÉL1.‚ìë{I1}V1, T1‚¶Ñ ‚äÜ ‚¶ÉL2.‚ìë{I2}V2, T2‚¶Ñ ‚Üí
                ‚àÄp. ‚¶ÉL1, ‚ìë{p,I1}V1.T1‚¶Ñ ‚äÜ ‚¶ÉL2, ‚ìë{p,I2}V2.T2‚¶Ñ.
#L1 #L2 #V1 #V2 * #f1 #g1 #HV1 #HV2 #Hfg1 #I1 #I2 #T1 #T2 * #f2 #g2 #Hf2 #Hg2 #Hfg2 #p
elim (sor_isfin_ex f1 (‚´±f2)) /3 width=3 by frees_fwd_isfin, isfin_tl/ #f #Hf #_
elim (sor_isfin_ex g1 (‚´±g2)) /3 width=3 by frees_fwd_isfin, isfin_tl/ #g #Hg #_
/4 width=12 by frees_bind, monotonic_sle_sor, sle_tl, ex3_2_intro/
qed.

lemma fle_flat: ‚àÄL1,L2,V1,V2. ‚¶ÉL1, V1‚¶Ñ ‚äÜ ‚¶ÉL2, V2‚¶Ñ ‚Üí
                ‚àÄT1,T2. ‚¶ÉL1, T1‚¶Ñ ‚äÜ ‚¶ÉL2, T2‚¶Ñ ‚Üí
                ‚àÄI1,I2. ‚¶ÉL1, ‚ìï{I1}V1.T1‚¶Ñ ‚äÜ ‚¶ÉL2, ‚ìï{I2}V2.T2‚¶Ñ.
#L1 #L2 #V1 #V2 * #f1 #g1 #HV1 #HV2 #Hfg1 #T1 #T2 * #f2 #g2 #Hf2 #Hg2 #Hfg2 #I1 #I2
elim (sor_isfin_ex f1 f2) /2 width=3 by frees_fwd_isfin/ #f #Hf #_
elim (sor_isfin_ex g1 g2) /2 width=3 by frees_fwd_isfin/ #g #Hg #_
/3 width=12 by frees_flat, monotonic_sle_sor, ex3_2_intro/
qed.
