(**************************************************************************)
(*       ___                                                              *)
(*      ||M||                                                             *)
(*      ||A||       A project by Andrea Asperti                           *)
(*      ||T||                                                             *)
(*      ||I||       Developers:                                           *)
(*      ||T||         The HELM team.                                      *)
(*      ||A||         http://helm.cs.unibo.it                             *)
(*      \   /                                                             *)
(*       \ /        This file is distributed under the terms of the       *)
(*        v         GNU General Public License Version 2                  *)
(*                                                                        *)
(**************************************************************************)

include "basic_2/relocation/drops_ceq.ma".
include "basic_2/relocation/drops_lexs.ma".

(* GENERIC SLICING FOR LOCAL ENVIRONMENTS ***********************************)

(* Properties with ranged equivalence for local environments ****************)

lemma lreq_dedropable: dedropable_sn lreq.
@lexs_liftable_dedropable
/2 width=6 by cfull_lift, ceq_lift, cfull_refl, ceq_refl/
qed-.

lemma lreq_dropable: ‚àÄRN,RP. dropable_dx (lexs RN RP).
@lexs_dropable qed-.

(* Basic_2A1: includes: lreq_drop_trans_be *)
lemma lreq_drops_trans_next: ‚àÄf2,L1,L2. L1 ‚â°[f2] L2 ‚Üí
                             ‚àÄb,f,I,K2,V. ‚¨á*[b,f] L2 ‚â° K2.‚ìë{I}V ‚Üí ùêî‚¶Éf‚¶Ñ ‚Üí
                             ‚àÄf1. f ‚äö ‚´Øf1 ‚â° f2 ‚Üí
                             ‚àÉ‚àÉK1. ‚¨á*[b,f] L1 ‚â° K1.‚ìë{I}V & K1 ‚â°[f1] K2.
#f2 #L1 #L2 #HL12 #b #f #I #K1 #V #HLK1 #Hf #f1 #Hf2
elim (lexs_drops_trans_next ‚Ä¶ HL12 ‚Ä¶ HLK1 Hf ‚Ä¶ Hf2) -f2 -L2 -Hf
/2 width=3 by ex2_intro/
qed-.

(* Basic_2A1: includes: lreq_drop_conf_be *)
lemma lreq_drops_conf_next: ‚àÄf2,L1,L2. L1 ‚â°[f2] L2 ‚Üí
                            ‚àÄb,f,I,K1,V. ‚¨á*[b,f] L1 ‚â° K1.‚ìë{I}V ‚Üí ùêî‚¶Éf‚¶Ñ ‚Üí
                            ‚àÄf1. f ‚äö ‚´Øf1 ‚â° f2 ‚Üí
                            ‚àÉ‚àÉK2. ‚¨á*[b,f] L2 ‚â° K2.‚ìë{I}V & K1 ‚â°[f1] K2.
#f2 #L1 #L2 #HL12 #b #f #I #K1 #V #HLK1 #Hf #f1 #Hf2
elim (lreq_drops_trans_next ‚Ä¶ (lreq_sym ‚Ä¶ HL12) ‚Ä¶ HLK1 ‚Ä¶ Hf2) // -f2 -L1 -Hf
/3 width=3 by lreq_sym, ex2_intro/
qed-.

lemma drops_lreq_trans_next: ‚àÄf1,K1,K2. K1 ‚â°[f1] K2 ‚Üí
                             ‚àÄb,f,I,L1,V. ‚¨á*[b,f] L1.‚ìë{I}V ‚â° K1 ‚Üí
                             ‚àÄf2. f ‚äö f1 ‚â° ‚´Øf2 ‚Üí
                             ‚àÉ‚àÉL2. ‚¨á*[b,f] L2.‚ìë{I}V ‚â° K2 & L1 ‚â°[f2] L2 & L1.‚ìë{I}V‚â°[f]L2.‚ìë{I}V.
#f1 #K1 #K2 #HK12 #b #f #I #L1 #V #HLK1 #f2 #Hf2
elim (drops_lexs_trans_next ‚Ä¶ HK12 ‚Ä¶ HLK1 ‚Ä¶ Hf2) -f1 -K1
/2 width=6 by cfull_lift, ceq_lift, cfull_refl, ceq_refl, ex3_intro/
qed-.
