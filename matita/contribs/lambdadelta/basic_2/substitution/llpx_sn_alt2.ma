(**************************************************************************)
(*       ___                                                              *)
(*      ||M||                                                             *)
(*      ||A||       A project by Andrea Asperti                           *)
(*      ||T||                                                             *)
(*      ||I||       Developers:                                           *)
(*      ||T||         The HELM team.                                      *)
(*      ||A||         http://helm.cs.unibo.it                             *)
(*      \   /                                                             *)
(*       \ /        This file is distributed under the terms of the       *)
(*        v         GNU General Public License Version 2                  *)
(*                                                                        *)
(**************************************************************************)

include "basic_2/substitution/cofrees_alt.ma".
include "basic_2/substitution/llpx_sn_alt1.ma".

(* LAZY SN POINTWISE EXTENSION OF A CONTEXT-SENSITIVE REALTION FOR TERMS ****)

(* alternative definition of llpx_sn (not recursive) *)
definition llpx_sn_alt2: relation4 bind2 lenv term term ‚Üí relation4 ynat term lenv lenv ‚âù
                         ŒªR,d,T,L1,L2. |L1| = |L2| ‚àß
                         (‚àÄI1,I2,K1,K2,V1,V2,i. d ‚â§ yinj i ‚Üí (L1 ‚ä¢ i ~œµ ùêÖ*[d]‚¶ÉT‚¶Ñ ‚Üí ‚ä•) ‚Üí
                            ‚á©[i] L1 ‚â° K1.‚ìë{I1}V1 ‚Üí ‚á©[i] L2 ‚â° K2.‚ìë{I2}V2 ‚Üí
                            I1 = I2 ‚àß R I1 K1 V1 V2
                         ).

(* Main properties **********************************************************)

theorem llpx_sn_llpx_sn_alt2: ‚àÄR,T,L1,L2,d. llpx_sn R d T L1 L2 ‚Üí llpx_sn_alt2 R d T L1 L2.
#R #U #L1 @(f2_ind ‚Ä¶ rfw ‚Ä¶ L1 U) -L1 -U
#n #IHn #L1 #U #Hn #L2 #d #H elim (llpx_sn_inv_alt1 ‚Ä¶ H) -H
#HL12 #IHU @conj //
#I1 #I2 #K1 #K2 #V1 #V2 #i #Hdi #H #HLK1 #HLK2 elim (frees_inv_ge ‚Ä¶ H) -H //
[ -n #HnU elim (IHU ‚Ä¶ HnU HLK1 HLK2) -IHU -HnU -HLK1 -HLK2 /2 width=1 by conj/
| * #J1 #K10 #W10 #j #Hdj #Hji #HLK10 #HnW10 #HnU destruct
  lapply (ldrop_fwd_drop2 ‚Ä¶ HLK10) #H
  lapply (ldrop_conf_ge ‚Ä¶ H ‚Ä¶ HLK1 ?) -H /2 width=1 by lt_to_le/ <minus_plus #HK10
  elim (ldrop_O1_lt (‚íª) L2 j) [2: <HL12 /2 width=5 by ldrop_fwd_length_lt2/ ] #J2 #K20 #W20 #HLK20
  lapply (ldrop_fwd_drop2 ‚Ä¶ HLK20) #H
  lapply (ldrop_conf_ge ‚Ä¶ H ‚Ä¶ HLK2 ?) -H /2 width=1 by lt_to_le/ <minus_plus #HK20
  elim (IHn K10 W10 ‚Ä¶ K20 0) /3 width=6 by ldrop_fwd_rfw/ -IHn
  elim (IHU ‚Ä¶ HnU HLK10 HLK20) -IHU -HnU -HLK10 -HLK20 //
]
qed.  
